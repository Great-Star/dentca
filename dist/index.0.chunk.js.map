{"version":3,"sources":["/Users/dev/works/git/sales-store/frontend/src/app/core/models/order.ts","/Users/dev/works/git/sales-store/frontend/src/app/user/components/addresses/addresses.component.html","/Users/dev/works/git/sales-store/frontend/src/app/user/components/addresses/addresses.component.scss","/Users/dev/works/git/sales-store/frontend/src/app/user/components/addresses/addresses.component.ts","/Users/dev/works/git/sales-store/frontend/src/app/user/components/addresses/bill-address/bill-address.component.html","/Users/dev/works/git/sales-store/frontend/src/app/user/components/addresses/bill-address/bill-address.component.scss","/Users/dev/works/git/sales-store/frontend/src/app/user/components/addresses/bill-address/bill-address.component.ts","/Users/dev/works/git/sales-store/frontend/src/app/user/components/addresses/ship-address/ship-address.component.html","/Users/dev/works/git/sales-store/frontend/src/app/user/components/addresses/ship-address/ship-address.component.scss","/Users/dev/works/git/sales-store/frontend/src/app/user/components/addresses/ship-address/ship-address.component.ts","/Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-orders/corp-orders.component.html","/Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-orders/corp-orders.component.scss","/Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-orders/corp-orders.component.ts","/Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-user-list/corp-user-list.component.html","/Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-user-list/corp-user-list.component.scss","/Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-user-list/corp-user-list.component.ts","/Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-user-list/corp-user/corp-user-address/corp-user-address.component.html","/Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-user-list/corp-user/corp-user-address/corp-user-address.component.scss","/Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-user-list/corp-user/corp-user-address/corp-user-address.component.ts","/Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-user-list/corp-user/corp-user.component.html","/Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-user-list/corp-user/corp-user.component.scss","/Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-user-list/corp-user/corp-user.component.ts","/Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-user-sign-up/corp-user-sign-up.component.html","/Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-user-sign-up/corp-user-sign-up.component.scss","/Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-user-sign-up/corp-user-sign-up.component.ts","/Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-users.component.html","/Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-users.component.scss","/Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-users.component.ts","/Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/order-ajust/order-ajust.component.html","/Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/order-ajust/order-ajust.component.scss","/Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/order-ajust/order-ajust.component.ts","/Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/order-detail/order-detail.component.html","/Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/order-detail/order-detail.component.scss","/Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/order-detail/order-detail.component.ts","/Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/order-detail/ship-item/ship-item.component.html","/Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/order-detail/ship-item/ship-item.component.scss","/Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/order-detail/ship-item/ship-item.component.ts","/Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/order-list-item/order-list-item.component.html","/Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/order-list-item/order-list-item.component.scss","/Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/order-list-item/order-list-item.component.ts","/Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/orders.component.html","/Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/orders.component.scss","/Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/orders.component.ts","/Users/dev/works/git/sales-store/frontend/src/app/user/components/overview/overview.component.html","/Users/dev/works/git/sales-store/frontend/src/app/user/components/overview/overview.component.scss","/Users/dev/works/git/sales-store/frontend/src/app/user/components/overview/overview.component.ts","/Users/dev/works/git/sales-store/frontend/src/app/user/components/returns/return-list-item/return-list-item.component.css","/Users/dev/works/git/sales-store/frontend/src/app/user/components/returns/return-list-item/return-list-item.component.html","/Users/dev/works/git/sales-store/frontend/src/app/user/components/returns/return-list-item/return-list-item.component.ts","/Users/dev/works/git/sales-store/frontend/src/app/user/components/returns/returns.component.css","/Users/dev/works/git/sales-store/frontend/src/app/user/components/returns/returns.component.html","/Users/dev/works/git/sales-store/frontend/src/app/user/components/returns/returns.component.ts","/Users/dev/works/git/sales-store/frontend/src/app/user/index.ts","/Users/dev/works/git/sales-store/frontend/src/app/user/user.component.html","/Users/dev/works/git/sales-store/frontend/src/app/user/user.component.scss","/Users/dev/works/git/sales-store/frontend/src/app/user/user.component.ts","/Users/dev/works/git/sales-store/frontend/src/app/user/user.routes.ts"],"names":[],"mappings":";;;;;;;AAAA;AAAA;;;;GAIG;AAOH;IAAA;IAgCA,CAAC;IAAD,YAAC;AAAD,CAAC;;AAED,2DAA2D;AAC3D,iDAAiD;AACjD;IAAA;IAaA,CAAC;IAAD,iBAAC;AAAD,CAAC;;;;;;;;;AC5DD,uS;;;;;;;ACAA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;ACXkD;AAEd;AAEc;AACO;AAQzD,IAAa,kBAAkB;IAG7B,4BACU,KAAsB,EACtB,WAAwB;QADxB,UAAK,GAAL,KAAK,CAAiB;QACtB,gBAAW,GAAX,WAAW,CAAa;QAEhC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,mEAAO,CAAC,CAAC;IAC1C,CAAC;IAED,qCAAQ,GAAR;QACE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC;IAClD,CAAC;IAEH,yBAAC;AAAD,CAAC;AAdY,kBAAkB;IAL9B,gEAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,0GAAyC;QACzC,0GAAyC;KAC1C,CAAC;yDAKiB,0DAAK,oBAAL,0DAAK,sDACC,0EAAW,oBAAX,0EAAW;GALvB,kBAAkB,CAc9B;AAd8B;;;;;;;;;ACb/B,4EAA4E,2BAA2B,aAAa,4DAA4D,aAAa,uGAAuG,aAAa,uBAAuB,aAAa,mCAAmC,aAAa,sCAAsC,a;;;;;;;ACA3a;AACA;;;AAGA;AACA,iCAAkC,oBAAoB,mBAAmB,qBAAqB,uCAAuC,wBAAwB,EAAE,OAAO,wBAAwB,oBAAoB,EAAE;;AAEpN;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;ACXyD;AAOzD,IAAa,oBAAoB;IAG/B;IAAgB,CAAC;IAEjB,uCAAQ,GAAR;IACA,CAAC;IAEH,2BAAC;AAAD,CAAC;AAPU;IAAR,4DAAK,EAAE;;qDAAc;AADX,oBAAoB;IALhC,gEAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,0HAA4C;QAC5C,0HAA4C;KAC7C,CAAC;;GACW,oBAAoB,CAQhC;AARgC;;;;;;;;ACPjC,6EAA6E,2BAA2B,aAAa,4DAA4D,aAAa,uGAAuG,aAAa,uBAAuB,aAAa,mCAAmC,aAAa,sCAAsC,a;;;;;;;ACA5a;AACA;;;AAGA;AACA,iCAAkC,oBAAoB,mBAAmB,qBAAqB,uCAAuC,wBAAwB,EAAE,OAAO,wBAAwB,oBAAoB,EAAE;;AAEpN;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;ACXyD;AAOzD,IAAa,oBAAoB;IAG/B;IAAgB,CAAC;IAEjB,uCAAQ,GAAR;IACA,CAAC;IAEH,2BAAC;AAAD,CAAC;AAPU;IAAR,4DAAK,EAAE;;qDAAc;AADX,oBAAoB;IALhC,gEAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,0HAA4C;QAC5C,0HAA4C;KAC7C,CAAC;;GACW,oBAAoB,CAQhC;AARgC;;;;;;;;ACPjC,yNAAyN,oEAAoE,6DAA6D,gBAAgB,qBAAqB,oCAAoC,qBAAqB,sCAAsC,qBAAqB,4DAA4D,+FAA+F,eAAe,wGAAwG,eAAe,uIAAuI,eAAe,yC;;;;;;;ACA16B;AACA;;;AAGA;AACA,gCAAiC,gBAAgB,EAAE,uBAAuB,wBAAwB,2BAA2B,gCAAgC,mBAAmB,EAAE,+BAA+B,kCAAkC,EAAE,mBAAmB,2BAA2B,8BAA8B,iBAAiB,EAAE,8BAA8B,8BAA8B,EAAE,oBAAoB,2BAA2B,EAAE,2BAA2B,uBAAuB,EAAE,OAAO,wBAAwB,gBAAgB,uBAAuB,gBAAgB,qBAAqB,iBAAiB,EAAE,kBAAkB,gCAAgC,EAAE,iBAAiB,gCAAgC,EAAE,mBAAmB,gCAAgC,EAAE;;AAEjxB;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;ACXkD;AACU;AAQ5D,IAAa,mBAAmB;IAG9B,6BACU,WAAwB;QADlC,iBAKC;QAJS,gBAAW,GAAX,WAAW,CAAa;QAEhC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE;aAC/B,SAAS,CAAC,gBAAM,IAAI,YAAI,CAAC,UAAU,GAAG,MAAM,EAAxB,CAAwB,CAAC;IAChD,CAAC;IAED,sCAAQ,GAAR;IAEA,CAAC;IAEH,0BAAC;AAAD,CAAC;AAdY,mBAAmB;IAL/B,gEAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,8GAA2C;QAC3C,8GAA2C;KAC5C,CAAC;yDAKuB,2EAAW,oBAAX,2EAAW;GAJvB,mBAAmB,CAc/B;AAd+B;;;;;;;;;ACThC,wLAAwL,8CAA8C,kEAAkE,iCAAiC,WAAW,qBAAqB,cAAc,qBAAqB,eAAe,qBAAqB,iBAAiB,qBAAqB,eAAe,mmB;;;;;;;ACAre;AACA;;;AAGA;AACA,gCAAiC,gBAAgB,EAAE,uBAAuB,wBAAwB,2BAA2B,gCAAgC,mBAAmB,EAAE,+BAA+B,kCAAkC,EAAE,mBAAmB,2BAA2B,8BAA8B,iBAAiB,EAAE,8BAA8B,8BAA8B,EAAE,oBAAoB,2BAA2B,EAAE,2BAA2B,uBAAuB,EAAE,kCAAkC,8BAA8B,0BAA0B,gBAAgB,EAAE,8CAA8C,gCAAgC,EAAE,mBAAmB,gBAAgB,EAAE,UAAU,kBAAkB,EAAE;;AAEtvB;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;ACXyD;AACM;AAO/D,IAAa,qBAAqB;IAGhC,+BACU,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEL,wCAAQ,GAAR;IACA,CAAC;IAED,wCAAQ,GAAR,UAAS,EAAE,EAAE,MAAM;QAAnB,iBAeC;QAdC,IAAI,KAAK,GAAG;YACV,WAAW,EAAE;gBACX,QAAQ,EAAE,MAAM;aACjB;SACF;QACD,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,EAAE,EAAE,KAAK,CAAC;aACvC,SAAS,CAAC,cAAI;YACb,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,cAAI;gBACtC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;oBAClB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;gBACvB,CAAC;gBACD,MAAM,CAAC,IAAI,CAAC;YACd,CAAC,CAAC;QACJ,CAAC,CAAC;IACN,CAAC;IAED,yCAAS,GAAT,UAAU,IAAI;QACZ,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,CAAC;YACzD,MAAM,CAAC,KAAK,CAAC;QACf,IAAI;YACF,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAED,sCAAM,GAAN,UAAO,IAAI;QAAX,iBAOC;QANC,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC;aACrC,SAAS,CAAC;YACT,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACP,CAAC;IAEH,4BAAC;AAAD,CAAC;AA1CU;IAAR,4DAAK,EAAE;;wDAAW;AADR,qBAAqB;IALjC,gEAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,+HAA8C;QAC9C,+HAA8C;KAC/C,CAAC;yDAKuB,2EAAW,oBAAX,2EAAW;GAJvB,qBAAqB,CA2CjC;AA3CiC;;;;;;;;;ACRlC,wfAAwf,2DAA2D,2nBAA2nB,0DAA0D,wlBAAwlB,0DAA0D,w0BAAw0B,sDAAsD,4mBAA4mB,0DAA0D,0TAA0T,cAAc,mgBAAmgB,4DAA4D,yWAAyW,gBAAgB,gjBAAgjB,uDAAuD,knBAAknB,yDAAyD,siCAAsiC,2DAA2D,moBAAmoB,0DAA0D,slBAAslB,0DAA0D,w0BAAw0B,sDAAsD,4mBAA4mB,0DAA0D,0TAA0T,cAAc,mgBAAmgB,4DAA4D,yWAAyW,gBAAgB,gjBAAgjB,uDAAuD,knBAAknB,yDAAyD,k8BAAk8B,mM;;;;;;;ACAt1a;AACA;;;AAGA;AACA,iGAAkG,mBAAmB,mBAAmB,qBAAqB,aAAa,EAAE,mFAAmF,mCAAmC,iBAAiB,2BAA2B,mCAAmC,eAAe,UAAU,mBAAmB,EAAE,kBAAkB,gBAAgB,wBAAwB,kBAAkB,oBAAoB,eAAe,uBAAuB,sBAAsB,uBAAuB,wBAAwB,EAAE;;AAE5mB;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;;;;ACXkD;AACO;AACW;AACC;AACc;AAMhD;AAE+B;AAOlE,IAAa,wBAAwB;IAYnC,kCACU,WAAwB,EACxB,WAA2B,EAC3B,KAAqB,EACrB,MAAc,EACd,WAAwB,EACxB,KAAsB;QALtB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAgB;QAC3B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAiB;QAZhC,kBAAa,GAAiB,EAAE,CAAC;QACjC,kBAAa,GAAiB,EAAE,CAAC;IAY7B,CAAC;IAEL,2CAAQ,GAAR;QAAA,iBAgDC;QA/CC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,wEAAY,CAAC;aAC5B,SAAS,CAAC,mBAAS;YAClB,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,OAAM,CAAC,SAAS,CAAC,CAAC,CAAC;YAC1C,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC7B,CAAC,CAAC;QAEJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAC1C,UAAC,MAAW;YACV,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC3B,KAAI,CAAC,QAAQ;gBACX,KAAI,CAAC,WAAW;qBACf,WAAW,CAAC,KAAI,CAAC,MAAM,CAAC;qBACxB,SAAS,CAAC,kBAAQ;oBACjB,KAAI,CAAC,QAAQ,GAAG,QAAQ;oBACxB,KAAI,CAAC,WAAW,EAAE,CAAC;oBACnB,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;wBAC9B,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,MAAM,CAAC,CAAC;oBACjE,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;wBAC9B,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,MAAM,CAAC,CAAC;gBACnE,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACxC,uBAAuB,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBAC9C,SAAS,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAE;gBACrC,QAAQ,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAE;gBACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAE;gBACpC,QAAQ,EAAE,EAAE;gBACZ,IAAI,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAE;gBAChC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAE,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAE,CAAE;gBACvE,KAAK,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAE;gBACjC,QAAQ,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAE;gBACpC,UAAU,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAE;aACvC,CAAC;YACF,uBAAuB,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBAC9C,SAAS,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAE;gBACrC,QAAQ,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAE;gBACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAE;gBACpC,QAAQ,EAAE,EAAE;gBACZ,IAAI,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAE;gBAChC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAE,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAE,CAAE;gBACvE,KAAK,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAE;gBACjC,QAAQ,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAE;gBACpC,UAAU,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAE;aACvC,CAAC;SACH,CAAC,CAAC;IACL,CAAC;IAED,8CAAW,GAAX;QACE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;YACxB,uBAAuB,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;YACxE,uBAAuB,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;SACzE,CAAC,CAAC;IAEL,CAAC;IAED,iDAAc,GAAd,UAAe,OAAO;QACpB,EAAE,CAAC,CAAC,OAAO,CAAC;YACV,MAAM,CAAC;gBACL,SAAS,EAAE,OAAO,CAAC,WAAW,CAAC;gBAC/B,QAAQ,EAAE,OAAO,CAAC,UAAU,CAAC;gBAC7B,QAAQ,EAAE,OAAO,CAAC,UAAU,CAAC;gBAC7B,QAAQ,EAAE,OAAO,CAAC,UAAU,CAAC;gBAC7B,IAAI,EAAE,OAAO,CAAC,MAAM,CAAC;gBACrB,OAAO,EAAE,OAAO,CAAC,SAAS,CAAC;gBAC3B,KAAK,EAAE,OAAO,CAAC,OAAO,CAAC;gBACvB,QAAQ,EAAE,OAAO,CAAC,UAAU,CAAC;gBAC7B,UAAU,EAAE,OAAO,CAAC,YAAY,CAAC;aAClC;QACH,IAAI;YACF,MAAM,CAAC;gBACL,SAAS,EAAE,EAAE;gBACb,QAAQ,EAAE,EAAE;gBACZ,QAAQ,EAAE,EAAE;gBACZ,QAAQ,EAAE,EAAE;gBACZ,IAAI,EAAE,EAAE;gBACR,OAAO,EAAE,EAAE;gBACX,KAAK,EAAE,EAAE;gBACT,QAAQ,EAAE,EAAE;gBACZ,UAAU,EAAE,EAAE;aACf;IACL,CAAC;IAED,yCAAM,GAAN;QAAA,iBA0CC;QAzCC,IAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;QACzC,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACpC,IAAM,YAAY,GAAG;YACnB,WAAW,EAAE;gBACX,uBAAuB,EAAE;oBACvB,SAAS,EAAE,SAAS,CAAC,uBAAuB,CAAC,SAAS;oBACtD,QAAQ,EAAE,SAAS,CAAC,uBAAuB,CAAC,QAAQ;oBACpD,QAAQ,EAAE,SAAS,CAAC,uBAAuB,CAAC,QAAQ;oBACpD,QAAQ,EAAE,SAAS,CAAC,uBAAuB,CAAC,QAAQ;oBACpD,IAAI,EAAE,SAAS,CAAC,uBAAuB,CAAC,IAAI;oBAC5C,OAAO,EAAE,SAAS,CAAC,uBAAuB,CAAC,OAAO;oBAClD,KAAK,EAAE,SAAS,CAAC,uBAAuB,CAAC,KAAK;oBAC9C,QAAQ,EAAE,SAAS,CAAC,uBAAuB,CAAC,QAAQ;oBACpD,UAAU,EAAE,SAAS,CAAC,uBAAuB,CAAC,UAAU;iBACzD;gBACD,uBAAuB,EAAE;oBACvB,SAAS,EAAE,SAAS,CAAC,uBAAuB,CAAC,SAAS;oBACtD,QAAQ,EAAE,SAAS,CAAC,uBAAuB,CAAC,QAAQ;oBACpD,QAAQ,EAAE,SAAS,CAAC,uBAAuB,CAAC,QAAQ;oBACpD,QAAQ,EAAE,SAAS,CAAC,uBAAuB,CAAC,QAAQ;oBACpD,IAAI,EAAE,SAAS,CAAC,uBAAuB,CAAC,IAAI;oBAC5C,OAAO,EAAE,SAAS,CAAC,uBAAuB,CAAC,OAAO;oBAClD,KAAK,EAAE,SAAS,CAAC,uBAAuB,CAAC,KAAK;oBAC9C,QAAQ,EAAE,SAAS,CAAC,uBAAuB,CAAC,QAAQ;oBACpD,UAAU,EAAE,SAAS,CAAC,uBAAuB,CAAC,UAAU;iBACzD;aACF;SACF,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,YAAY,CAAC;aACvD,SAAS,CAAE,cAAI;YACd,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC3B,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACX,EAAE;gBACF,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC;YAC/B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC;gBACjC,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC5B,CAAC;QACH,CAAC,CAAC;QACJ,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAC5B,CAAC;IAEC;;;KAGC;IACH,2CAAQ,GAAR,UAAS,KAAa;QACpB,IAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9D,MAAM,CAAE,MAAM,CAAC,OAAO;YACpB,CAAE,MAAM,CAAC,KAAK;gBACZ,MAAM,CAAC,OAAO,CAAE,CAAC;IACvB,CAAC;IAED;;;;OAIG;IACH,mDAAgB,GAAhB,UAAiB,KAAa,EAAE,MAAW;QACzC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,GAAG;YACtC,MAAM,CAAa,GAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnC,CAAC,EAAE,MAAM,CAAC,CAAC;IACb,CAAC;IAED,wDAAqB,GAArB,UAAsB,KAAK;QACzB,IAAI,iBAAiB,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAC3C,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC;QACzC,+EAA+E;IACjF,CAAC;IAED,wDAAqB,GAArB,UAAsB,KAAK;QACzB,IAAI,iBAAiB,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAC3C,IAAI,CAAC,QAAQ,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC;QACzC,+EAA+E;IACjF,CAAC;IAED,2CAAQ,GAAR,UAAS,EAAE,EAAE,IAAI;QACf,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS;aAC3B,MAAM,CAAC,iBAAO,IAAI,cAAO,CAAC,EAAE,IAAI,EAAE,EAAhB,CAAgB,CAAC;QACtC,EAAE,CAAC,CAAC,IAAI,IAAI,MAAM,CAAC;YACjB,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAC3C,IAAI;YACF,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IAC7C,CAAC;IAEO,+CAAY,GAApB,UAAqB,SAAiB,EAAE,GAAW;QACjD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,EAAC,KAAK,EAAE,GAAG,EAAC,CAAC,CAAC;IAC/D,CAAC;IACH,+BAAC;AAAD,CAAC;AApMY,wBAAwB;IALpC,gEAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,8JAAiD;QACjD,8JAAiD;KAClD,CAAC;yDAcuB,2EAAW,oBAAX,2EAAW,sDACX,sFAAc,oBAAd,sFAAc,sDACpB,uEAAc,oBAAd,uEAAc,sDACb,+DAAM,oBAAN,+DAAM,sDACD,mEAAW,oBAAX,mEAAW,sDACjB,0DAAK,oBAAL,0DAAK;GAlBX,wBAAwB,CAoMpC;AApMoC;;;;;;;;;ACnBrC,+aAA+a,+BAA+B,geAAge,gCAAgC,0dAA0d,iCAAiC,weAAwe,kCAAkC,8pBAA8pB,+CAA+C,whBAAwhB,gEAAgE,gHAAgH,cAAc,oLAAoL,yM;;;;;;;ACA1iH;AACA;;;AAGA;AACA,iGAAkG,mBAAmB,mBAAmB,qBAAqB,aAAa,EAAE,mFAAmF,mCAAmC,iBAAiB,2BAA2B,mCAAmC,eAAe,UAAU,mBAAmB,EAAE,aAAa,yBAAyB,yBAAyB,kBAAkB,8BAA8B,+BAA+B,gCAAgC,wBAAwB,8BAA8B,+BAA+B,2CAA2C,EAAE,eAAe,mBAAmB,wBAAwB,EAAE,kBAAkB,gBAAgB,wBAAwB,kBAAkB,oBAAoB,eAAe,uBAAuB,sBAAsB,uBAAuB,EAAE;;AAEh8B;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;;ACXkD;AACO;AACW;AACF;AAG/B;AAQnC,IAAa,iBAAiB;IAS5B,2BACU,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,WAAwB,EACxB,KAAsB;QAJtB,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAiB;IAGhC,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAsBC;QArBC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAE3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAC1C,UAAC,MAAW;YACV,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC3B,KAAI,CAAC,QAAQ;gBACX,KAAI,CAAC,WAAW;qBACf,WAAW,CAAC,KAAI,CAAC,MAAM,CAAC;qBACxB,SAAS,CAAC,kBAAQ;oBACjB,KAAI,CAAC,QAAQ,GAAG,QAAQ;oBACxB,KAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,KAAK,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAE;YACjC,MAAM,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAE;YAClC,OAAO,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAE;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAE;YAC/D,qBAAqB,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAE;SAClD,CAAC,CAAC;IACL,CAAC;IAED,uCAAW,GAAX;QACE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;YACrB,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK;YAC1B,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM;YAC5B,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO;YAC9B,QAAQ,EAAE,EAAE;YACZ,qBAAqB,EAAE,EAAE;SAC1B,CAAC,CAAC;IAEL,CAAC;IAED,kCAAM,GAAN;QAAA,iBAyBC;QAxBC,IAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QACtC,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACpC,IAAM,YAAY,GAAG;YACnB,WAAW,EAAE;gBACX,KAAK,EAAE,SAAS,CAAC,KAAK;gBACtB,MAAM,EAAE,SAAS,CAAC,MAAM;gBACxB,OAAO,EAAE,SAAS,CAAC,OAAO;gBAC1B,QAAQ,EAAE,SAAS,CAAC,QAAQ;gBAC5B,qBAAqB,EAAE,SAAS,CAAC,qBAAqB;aACvD;SACF,CAAC;QAEF,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,EAAE,YAAY,CAAC;aACvD,SAAS,CAAE,cAAI;YACd,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC3B,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACX,IAAI,CAAC,OAAO,CAAC,aAAG;oBACd,EAAE,EAAC,MAAM,CAAC,GAAG,CAAC,CAAC;wBAAC,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzD,CAAC,CAAC;YACJ,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC5B,CAAC;QACH,CAAC,CAAC;QACJ,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAC5B,CAAC;IAEO,wCAAY,GAApB,UAAqB,SAAiB,EAAE,GAAW;QACjD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,EAAC,KAAK,EAAE,GAAG,EAAC,CAAC,CAAC;IAC5D,CAAC;IAEC;;;KAGC;IACH,oCAAQ,GAAR,UAAS,KAAa;QACpB,IAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3D,MAAM,CAAE,MAAM,CAAC,OAAO;YACpB,CAAE,MAAM,CAAC,KAAK;gBACZ,MAAM,CAAC,OAAO,CAAE,CAAC;IACvB,CAAC;IAED;;;;OAIG;IACH,4CAAgB,GAAhB,UAAiB,KAAa,EAAE,MAAW;QACzC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,GAAG;YACtC,MAAM,CAAa,GAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnC,CAAC,EAAE,MAAM,CAAC,CAAC;IACb,CAAC;IACH,wBAAC;AAAD,CAAC;AA1GY,iBAAiB;IAL7B,gEAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,oIAAyC;QACzC,oIAAyC;KAC1C,CAAC;yDAWuB,2EAAW,oBAAX,2EAAW,sDACjB,uEAAc,oBAAd,uEAAc,sDACb,+DAAM,oBAAN,+DAAM,sDACD,mEAAW,oBAAX,mEAAW,sDACjB,0DAAK,oBAAL,0DAAK;GAdX,iBAAiB,CA0G7B;AA1G6B;;;;;;;;;ACd9B,6EAA6E,yBAAyB,6QAA6Q,+BAA+B,ibAAib,gDAAgD,0OAA0O,gCAAgC,4fAA4f,iCAAiC,+iBAA+iB,kCAAkC,ksBAAksB,+CAA+C,4hBAA4hB,gEAAgE,2HAA2H,mN;;;;;;;ACAnrH;AACA;;;AAGA;AACA,iGAAkG,mBAAmB,mBAAmB,qBAAqB,aAAa,EAAE,mFAAmF,mCAAmC,iBAAiB,2BAA2B,mCAAmC,eAAe,UAAU,mBAAmB,EAAE,kBAAkB,gBAAgB,wBAAwB,kBAAkB,oBAAoB,eAAe,uBAAuB,sBAAsB,uBAAuB,wBAAwB,EAAE;;AAE5mB;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;ACXkD;AACkB;AACL;AACtB;AAOzC,IAAa,uBAAuB;IAIlC,iCACU,WAAwB,EACxB,WAAwB,EACxB,MAAc;QAFd,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAEL,0CAAQ,GAAR;QACE,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,KAAK,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAChC,MAAM,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YACjC,OAAO,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAClC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9D,qBAAqB,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;SACjD,CAAC;IACJ,CAAC;IAED,gDAAc,GAAd;QAAA,iBAwBC;QAvBC,IAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QACtC,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAEpC,IAAM,QAAQ,GAAG;YACf,KAAK,EAAE,SAAS,CAAC,KAAK;YACtB,MAAM,EAAE,SAAS,CAAC,MAAM;YACxB,OAAO,EAAE,SAAS,CAAC,OAAO;YAC1B,QAAQ,EAAE,SAAS,CAAC,QAAQ;YAC5B,qBAAqB,EAAE,SAAS,CAAC,qBAAqB;SACvD;QACD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,EAAC;YACvB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,EAAC,WAAW,EAAE,QAAQ,EAAC,CAAC;iBACvD,SAAS,CAAC,cAAI;gBACb,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC3B,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACX,IAAI,CAAC,OAAO,CAAC,aAAG;wBACd,EAAE,EAAC,MAAM,CAAC,GAAG,CAAC,CAAC;4BAAC,KAAI,CAAC,YAAY,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACzD,CAAC,CAAC;gBACJ,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC5B,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAEO,8CAAY,GAApB,UAAqB,SAAiB,EAAE,GAAW;QACjD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,EAAC,KAAK,EAAE,GAAG,EAAC,CAAC,CAAC;IAC5D,CAAC;IAED;;;OAGG;IACH,0CAAQ,GAAR,UAAS,KAAa;QACpB,IAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3D,MAAM,CAAE,MAAM,CAAC,OAAO;YACpB,CAAE,MAAM,CAAC,KAAK;gBACZ,MAAM,CAAC,OAAO,CAAE,CAAC;IACvB,CAAC;IAED;;;;OAIG;IACH,kDAAgB,GAAhB,UAAiB,KAAa,EAAE,MAAW;QACzC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,GAAG;YACtC,MAAM,CAAa,GAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnC,CAAC,EAAE,MAAM,CAAC,CAAC;IACb,CAAC;IAGH,8BAAC;AAAD,CAAC;AA1EY,uBAAuB;IALnC,gEAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,qIAAiD;QACjD,qIAAiD;KAClD,CAAC;yDAMuB,2EAAW,oBAAX,2EAAW,sDACX,mEAAW,oBAAX,mEAAW,sDAChB,+DAAM,oBAAN,+DAAM;GAPb,uBAAuB,CA0EnC;AA1EmC;;;;;;;;;ACVpC,gM;;;;;;;ACAA;AACA;;;AAGA;AACA,2CAA4C,iBAAiB,wBAAwB,EAAE;;AAEvF;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;ACX6D;AACD;AAS5D,IAAa,kBAAkB;IAI7B,4BACU,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAElC,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE;aAC9B,SAAS,CAAC,eAAK;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;IACrB,CAAC;IAGD,wCAAW,GAAX;QACE,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;IAC9B,CAAC;IACH,yBAAC;AAAD,CAAC;AArBY,kBAAkB;IAL9B,gEAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,4GAA0C;QAC1C,4GAA0C;KAC3C,CAAC;yDAMuB,2EAAW,oBAAX,2EAAW;GALvB,kBAAkB,CAqB9B;AArB8B;;;;;;;;;ACV/B,yDAAyD,+e;;;;;;;ACAzD;AACA;;;AAGA;AACA,sCAAuC,sBAAsB,uBAAuB,EAAE,kCAAkC,mBAAmB,kBAAkB,qBAAqB,qDAAqD,EAAE,qCAAqC,sBAAsB,qBAAqB,uBAAuB,yCAAyC,yBAAyB,qBAAqB,EAAE,sCAAsC,qBAAqB,sBAAsB,uBAAuB,EAAE;;AAEnhB;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;ACXkD;AAGS;AACvB;AAGqB;AAOzD,IAAa,mBAAmB;IAK9B,6BACU,KAAsB,EACtB,KAAqB,EACrB,MAAc;QAFd,UAAK,GAAL,KAAK,CAAiB;QACtB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QAEtB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,yEAAa,CAAC,CAAC;IAClD,CAAC;IAED,sCAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CACnD,UAAC,MAAW;YACV,KAAI,CAAC,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;QACtC,CAAC,CAAC,CAAC;IACP,CAAC;IACH,0BAAC;AAAD,CAAC;AAnBY,mBAAmB;IAL/B,gEAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,qHAA2C;QAC3C,qHAA2C;KAC5C,CAAC;yDAOiB,0DAAK,oBAAL,0DAAK,sDACL,uEAAc,oBAAd,uEAAc,sDACb,+DAAM,oBAAN,+DAAM;GARb,mBAAmB,CAmB/B;AAnB+B;;;;;;;;;ACdhC,mcAAmc,4BAA4B,+BAA+B,aAAa,+QAA+Q,kCAAkC,6PAA6P,yBAAyB,ssBAAssB,wBAAwB,ghBAAghB,4BAA4B,+BAA+B,iBAAiB,4IAA4I,4BAA4B,0DAA0D,iBAAiB,sLAAsL,kBAAkB,67BAA67B,cAAc,+GAA+G,8BAA8B,8BAA8B,6BAA6B,oBAAoB,6BAA6B,oBAAoB,yBAAyB,IAAI,4BAA4B,oDAAoD,0BAA0B,wJAAwJ,4BAA4B,4CAA4C,aAAa,iGAAiG,4BAA4B,4CAA4C,kBAAkB,8FAA8F,4BAA4B,4CAA4C,kBAAkB,wGAAwG,4BAA4B,4CAA4C,wBAAwB,+GAA+G,4CAA4C,yE;;;;;;;ACAzmK;AACA;;;AAGA;AACA,kCAAmC,mBAAmB,EAAE,sBAAsB,2BAA2B,EAAE,cAAc,gBAAgB,mCAAmC,gBAAgB,qCAAqC,qBAAqB,8BAA8B,0BAA0B,EAAE;;AAEhT;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;;;;ACX6D;AACzB;AAGyB;AAEJ;AAGa;AAGS;AAEpB;AAO3D,IAAa,oBAAoB;IAQ/B,8BACU,KAAsB,EACtB,QAAyB,EACzB,WAAwB,EACxB,KAAqB,EACrB,MAAc;QAJd,UAAK,GAAL,KAAK,CAAiB;QACtB,aAAQ,GAAR,QAAQ,CAAiB;QACzB,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QAEtB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,yEAAa,CAAC;IACpD,CAAC;IAED,uCAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CACnD,UAAC,MAAW;YACV,KAAI,CAAC,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;YACpC,KAAI,CAAC,kBAAkB;gBACrB,KAAI,CAAC,WAAW;qBACf,cAAc,CAAC,KAAI,CAAC,WAAW,CAAC;qBAChC,SAAS,CAAC,eAAK,IAAI,YAAI,CAAC,KAAK,GAAG,KAAK,EAAlB,CAAkB,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACN,CAAC;IAED,iDAAkB,GAAlB,UAAmB,SAAwB;QACzC,MAAM,CAAC,8EAAW,CAAC,YAAY,GAAG,SAAS,CAAC,SAAS,CAAC;IACxD,CAAC;IAED,6CAAc,GAAd,UAAe,SAAc;QAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC;QAC9D,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IACpF,CAAC;IAED,uCAAQ,GAAR,UAAS,EAAO;QACd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;IAC1D,CAAC;IAED,0CAAW,GAAX;QACE,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;QACtC,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;QACtC,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC;YAC1B,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;IAC1C,CAAC;IAED,kDAAmB,GAAnB,UAAoB,QAAuB;QACzC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,kBAAQ;YAC1C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAG,EAAE,CAAC;gBACxD,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,IAAI,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;oBAC3C,MAAM,CAAC,QAAQ,CAAC;YACpB,CAAC;QACH,CAAC,CAAC;IACJ,CAAC;IAEH,2BAAC;AAAD,CAAC;AA1DY,oBAAoB;IALhC,gEAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,uHAA4C;QAC5C,uHAA4C;KAC7C,CAAC;yDAUiB,0DAAK,oBAAL,0DAAK,sDACF,2FAAe,oBAAf,2FAAe,sDACZ,2EAAW,oBAAX,2EAAW,sDACjB,uEAAc,oBAAd,uEAAc,sDACb,+DAAM,oBAAN,+DAAM;GAbb,oBAAoB,CA0DhC;AA1DgC;;;;;;;;;ACrBjC,6TAA6T,iBAAiB,yDAAyD,0BAA0B,wDAAwD,eAAe,8hBAA8hB,uBAAuB,iIAAiI,gBAAgB,kD;;;;;;;ACA9qC;AACA;;;AAGA;AACA,qCAAsC,yBAAyB,yBAAyB,kBAAkB,8BAA8B,+BAA+B,gCAAgC,EAAE,0BAA0B,0BAA0B,kBAAkB,yBAAyB,EAAE,0BAA0B,uBAAuB,qBAAqB,wBAAwB,4BAA4B,yBAAyB,EAAE,0CAA0C,qBAAqB,yBAAyB,EAAE,wBAAwB,wBAAwB,yBAAyB,EAAE,4BAA4B,wBAAwB,qBAAqB,EAAE,gBAAgB,yBAAyB,yBAAyB,kBAAkB,8BAA8B,+BAA+B,gCAAgC,EAAE,qBAAqB,yBAAyB,EAAE,sCAAsC,+BAA+B,oBAAoB,EAAE,0CAA0C,yBAAyB,EAAE;;AAEljC;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;ACXyD;AACkB;AAEL;AAOtE,IAAa,iBAAiB;IAK5B;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACtC,CAAC;IAED,uCAAW,GAAX;QACE,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;IACrC,CAAC;IAED,8CAAkB,GAAlB,UAAmB,SAAwB;QACzC,MAAM,CAAC,8EAAW,CAAC,YAAY,GAAG,SAAS,CAAC,SAAS,CAAC;IACxD,CAAC;IACH,wBAAC;AAAD,CAAC;AAlBU;IAAR,4DAAK,EAAE;kDAAW,4EAAa,oBAAb,4EAAa;mDAAC;AACxB;IAAR,4DAAK,EAAE;;oDAA4B;AAFzB,iBAAiB;IAL7B,gEAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,8HAAyC;QACzC,8HAAyC;KAC1C,CAAC;;GACW,iBAAiB,CAmB7B;AAnB6B;;;;;;;;;ACV9B,0HAA0H,kCAAkC,+EAA+E,cAAc,8CAA8C,oCAAoC,2CAA2C,4BAA4B,mDAAmD,aAAa,eAAe,yBAAyB,6BAA6B,4CAA4C,6FAA6F,yBAAyB,WAAW,kCAAkC,MAAM,oCAAoC,ib;;;;;;;ACAhxB;AACA;;;AAGA;AACA,2CAA4C,gBAAgB,EAAE,wBAAwB,mBAAmB,EAAE;;AAE3G;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;ACXyD;AACE;AACW;AAOtE,IAAa,sBAAsB;IAGjC;IAAgB,CAAC;IAEjB,yCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,mDAAkB,GAAlB,UAAmB,GAAG;QACpB,MAAM,CAAC,8EAAW,CAAC,YAAY,GAAG,GAAG,CAAC;IACxC,CAAC;IAEH,6BAAC;AAAD,CAAC;AAZU;IAAR,4DAAK,EAAE;kDAAQ,sEAAU,oBAAV,sEAAU;qDAAC;AADhB,sBAAsB;IALlC,gEAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,6HAA+C;QAC/C,6HAA+C;KAChD,CAAC;;GACW,sBAAsB,CAalC;AAbkC;;;;;;;;;ACTnC,yDAAyD,2f;;;;;;;ACAzD;AACA;;;AAGA;AACA,sCAAuC,sBAAsB,uBAAuB,EAAE,kCAAkC,mBAAmB,kBAAkB,qBAAqB,qDAAqD,EAAE,qCAAqC,sBAAsB,qBAAqB,uBAAuB,yCAAyC,yBAAyB,qBAAqB,EAAE,sCAAsC,qBAAqB,sBAAsB,uBAAuB,EAAE;;AAEnhB;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;ACXkD;AACd;AAEqB;AAGD;AAOxD,IAAa,eAAe;IAG1B,yBACU,KAAsB,EACtB,WAAwB;QADxB,UAAK,GAAL,KAAK,CAAiB;QACtB,gBAAW,GAAX,WAAW,CAAa;QAEhC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,yEAAa,CAAC,CAAC;IAClD,CAAC;IAED,kCAAQ,GAAR;QACE,yDAAyD;IAC3D,CAAC;IACH,sBAAC;AAAD,CAAC;AAbY,eAAe;IAL3B,gEAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,oGAAsC;QACtC,oGAAsC;KACvC,CAAC;yDAKiB,0DAAK,oBAAL,0DAAK,sDACC,0EAAW,oBAAX,0EAAW;GALvB,eAAe,CAa3B;AAb2B;;;;;;;;;ACb5B,oFAAoF,2BAA2B,4EAA4E,8BAA8B,kFAAkF,+BAA+B,qFAAqF,gCAAgC,wCAAwC,eAAe,iB;;;;;;;ACAtf;AACA;;;AAGA;AACA,6BAA8B,oBAAoB,qBAAqB,sBAAsB,+BAA+B,EAAE,eAAe,sBAAsB,qBAAqB,uBAAuB,yCAAyC,yBAAyB,yBAAyB,EAAE;;AAE5S;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;ACXkD;AAEd;AAEc;AACO;AAQzD,IAAa,iBAAiB;IAG5B,2BACU,KAAsB,EACtB,WAAwB;QADxB,UAAK,GAAL,KAAK,CAAiB;QACtB,gBAAW,GAAX,WAAW,CAAa;QAEhC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,mEAAO,CAAC,CAAC;IAC1C,CAAC;IAED,oCAAQ,GAAR;IACA,CAAC;IAEH,wBAAC;AAAD,CAAC;AAbY,iBAAiB;IAL7B,gEAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,wGAAwC;QACxC,wGAAwC;KACzC,CAAC;yDAKiB,0DAAK,oBAAL,0DAAK,sDACC,0EAAW,oBAAX,0EAAW;GALvB,iBAAiB,CAa7B;AAb6B;;;;;;;;;ACb9B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,+D;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD,IAAa,uBAAuB;IAElC;IAAgB,CAAC;IAEjB,0CAAQ,GAAR;IACA,CAAC;IAEH,8BAAC;AAAD,CAAC;AAPY,uBAAuB;IALnC,gEAAS,CAAC;QACT,QAAQ,EAAE,sBAAsB;QAChC,gIAAgD;QAChD,+HAA+C;KAChD,CAAC;;GACW,uBAAuB,CAOnC;AAPmC;;;;;;;;ACPpC;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,sD;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD,IAAa,gBAAgB;IAE3B;IAAgB,CAAC;IAEjB,mCAAQ,GAAR;IACA,CAAC;IAEH,uBAAC;AAAD,CAAC;AAPY,gBAAgB;IAL5B,gEAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,sGAAuC;QACvC,qGAAsC;KACvC,CAAC;;GACW,gBAAgB,CAO5B;AAP4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPkB;AAEN;AAEzC,aAAa;AACgE;AACN;AACgC;AAC7B;AACiC;AAC1D;AACiD;AACA;AAElG,WAAW;AACX,yDAAyD;AAEJ;AAC2B;AACjC;AACgD;AACH;AACO;AACjB;AACG;AACoB;AACD;AACQ;AAC0B;AAiC1I,IAAa,UAAU;IAAvB;IAAyB,CAAC;IAAD,iBAAC;AAAD,CAAC;AAAb,UAAU;IA/BtB,+DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,aAAa;YACb,kGAAiB;YACjB,4HAAsB;YACtB,4FAAe;YACf,+FAAgB;YAChB,gIAAuB;YACvB,sEAAa;YACb,sGAAkB;YAClB,qHAAoB;YACpB,uHAAoB;YACpB,uHAAoB;YACpB,kHAAmB;YACnB,yHAAiB;YACjB,wGAAkB;YAClB,2GAAmB;YACnB,sIAAuB;YACvB,8HAAqB;YACrB,+HAAiB;YACjB,gKAAwB;SACzB;QACD,OAAO,EAAE,EACR;QACD,SAAS,EAAE,EACV;QACD,OAAO,EAAE;YACP,qEAAY,CAAC,QAAQ,CAAC,iEAAM,CAAC;YAC7B,oEAAY;SACb;KACF,CAAC;GACW,UAAU,CAAG;AAAH;;;;;;;;AC7DvB,+5B;;;;;;;ACAA;AACA;;;AAGA;AACA,8BAA+B,mBAAmB,0BAA0B,EAAE,gBAAgB,qCAAqC,qBAAqB,uBAAuB,oCAAoC,EAAE,cAAc,oCAAoC,EAAE;;AAEzQ;;;AAGA;AACA,2C;;;;;;;;;;;;;;;;;;;;;;ACXkD;AACd;AAEU;AACO;AAQrD,IAAa,aAAa;IAGxB,uBACU,KAAsB,EACtB,OAAoB;QADpB,UAAK,GAAL,KAAK,CAAiB;QACtB,YAAO,GAAP,OAAO,CAAa;QAE5B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,mEAAO,CAAC,CAAC;QACxC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC;IACnD,CAAC;IAED,gCAAQ,GAAR;IACA,CAAC;IACH,oBAAC;AAAD,CAAC;AAbY,aAAa;IALzB,gEAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,gFAAoC;QACpC,gFAAoC;KACrC,CAAC;yDAKiB,0DAAK,oBAAL,0DAAK,sDACH,0EAAW,oBAAX,0EAAW;GALnB,aAAa,CAazB;AAbyB;;;;;;;;;;;;;;;;;;;;;;ACZmD;AAC5B;AACsB;AACS;AACe;AACH;AACV;AACG;AACoB;AACO;AAC0B;AAEnI,IAAM,UAAU,GAAG;IACxB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sEAAa;QACxB,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE;YACpC,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,kGAAiB,EAAC;YACjD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,4FAAe,EAAE;YAC9C,EAAE,IAAI,EAAE,uBAAuB,EAAE,SAAS,EAAE,oHAAoB,EAAE;YAClE,EAAE,IAAI,EAAE,uBAAuB,EAAE,SAAS,EAAE,iHAAmB,EAAE;YACjE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,qGAAkB,EAAE;YACpD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,uGAAkB,EAAE;YACpD,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,qIAAuB,EAAE;YAChE,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,8HAAiB,EAAE;YACvD,EAAE,IAAI,EAAE,uBAAuB,EAAE,SAAS,EAAE,gKAAwB,EAAE;YACtE,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,0GAAmB,EAAE;SACvD;KACF;CACF,CAAC","file":"index.0.chunk.js","sourcesContent":["/*\r\n * Order model\r\n * Detailed info http://guides.spreecommerce.org/developer/orders.html\r\n * Public API's http://guides.spreecommerce.org/api/orders.html\r\n */\r\n\r\nimport { LineItem, LightLineItem } from './line_item';\r\nimport { Address } from './address';\r\nimport { Payment } from './payment';\r\nimport { LightShipment } from './shipment';\r\n\r\nexport class Order {\r\n  id: number;\r\n  number: string;\r\n  item_total: string;\r\n  total: string;\r\n  ship_total: string;\r\n  state: string;\r\n  adjustment_total: string;\r\n  user_id: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n  completed_at: string;\r\n  payment_total: string;\r\n  shipment_state: string;\r\n  payment_state: string;\r\n  email: string;\r\n  special_instructions: string;\r\n  channel: string;\r\n  included_tax_total: string;\r\n  additional_tax_total: string;\r\n  display_included_tax_total: string;\r\n  display_additional_tax_total: string;\r\n  tax_total: string;\r\n  currency: string;\r\n  considered_risky: boolean;\r\n  canceler_id: string;\r\n  total_quantity: string;\r\n  token: string;\r\n  bill_address: [Address];\r\n  ship_address: [Address];\r\n  line_items: [LineItem];\r\n  payments: [Payment];\r\n}\r\n\r\n// NOTE: This just mimics the serializer exposed in the API\r\n// Not sure if it is required, review it in APRIL\r\nexport class LightOrder {\r\n  number: string;\r\n  payment_state: string;\r\n  created_at: string;\r\n  updated_at: string;\r\n  completed_at: string;\r\n  state: string;\r\n  total: string;\r\n  curreny: string;\r\n  shipment_state: string;\r\n  original_line_item: number;\r\n  line_items: [LightLineItem];\r\n  shipments: [LightShipment];\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/dev/works/git/sales-store/frontend/src/app/core/models/order.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <app-bill-address class=\\\"col-md-6 col-sm-6\\\" [address]=\\\"(user$ | async).get('bill_address')\\\"></app-bill-address>\\r\\n  <app-ship-address class=\\\"col-md-6 col-sm-6\\\" [address]=\\\"(user$ | async).get('ship_address')\\\"></app-ship-address> \\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/addresses/addresses.component.html\n// module id = ../../../../../src/app/user/components/addresses/addresses.component.html\n// module chunks = index.0","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/addresses/addresses.component.scss\n// module id = ../../../../../src/app/user/components/addresses/addresses.component.scss\n// module chunks = index.0","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Store } from '@ngrx/store';\r\nimport { User } from '../../../core/models/user';\r\nimport { getUser } from '../../reducers/selector';\r\nimport { UserActions } from '../../actions/user.actions';\r\nimport { AppState } from '../../../interfaces';\r\n\r\n@Component({\r\n  selector: 'app-addresses',\r\n  templateUrl: './addresses.component.html',\r\n  styleUrls: ['./addresses.component.scss']\r\n})\r\nexport class AddressesComponent implements OnInit {\r\n  user$: Observable<User>;\r\n\r\n  constructor(\r\n    private store: Store<AppState>,\r\n    private userActions: UserActions\r\n  ) {\r\n    this.user$ = this.store.select(getUser);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.store.dispatch(this.userActions.getUser());\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/addresses/addresses.component.ts","module.exports = \"<div class=\\\"title\\\">BILLING ADDRESS</div>\\n<div>\\n  <p>{{address?.get('full_name')}}</p>\\n  <p>{{address?.get('address1') +\\\", \\\"+ address?.get('address1')}}</p>\\n  <p>{{address?.get('city') + \\\", \\\" + address?.get('state')?.get('name') + \\\", \\\" + address?.get('zipcode')}}</p>\\n  <p>{{address?.get('phone')}}</p>\\n  <p>{{address?.get('alternative_phone')}}</p>\\n  <p>{{address?.get('country')?.get('name')}}</p>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/addresses/bill-address/bill-address.component.html\n// module id = ../../../../../src/app/user/components/addresses/bill-address/bill-address.component.html\n// module chunks = index.0","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".title {\\n  font-size: 17px;\\n  color: #535766;\\n  font-weight: 600;\\n  font-family: \\\"Whitney-semi-bold\\\";\\n  margin-bottom: 20px; }\\n\\np {\\n  margin-bottom: 15px;\\n  font-size: 15px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/addresses/bill-address/bill-address.component.scss\n// module id = ../../../../../src/app/user/components/addresses/bill-address/bill-address.component.scss\n// module chunks = index.0","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-bill-address',\n  templateUrl: './bill-address.component.html',\n  styleUrls: ['./bill-address.component.scss']\n})\nexport class BillAddressComponent implements OnInit {\n  @Input() address: any;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/addresses/bill-address/bill-address.component.ts","module.exports = \"<div class=\\\"title\\\">SHIPPING ADDRESS</div>\\n<div>\\n  <p>{{address?.get('full_name')}}</p>\\n  <p>{{address?.get('address1') +\\\", \\\"+ address?.get('address1')}}</p>\\n  <p>{{address?.get('city') + \\\", \\\" + address?.get('state')?.get('name') + \\\", \\\" + address?.get('zipcode')}}</p>\\n  <p>{{address?.get('phone')}}</p>\\n  <p>{{address?.get('alternative_phone')}}</p>\\n  <p>{{address?.get('country')?.get('name')}}</p>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/addresses/ship-address/ship-address.component.html\n// module id = ../../../../../src/app/user/components/addresses/ship-address/ship-address.component.html\n// module chunks = index.0","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".title {\\n  font-size: 17px;\\n  color: #535766;\\n  font-weight: 600;\\n  font-family: \\\"Whitney-semi-bold\\\";\\n  margin-bottom: 20px; }\\n\\np {\\n  margin-bottom: 15px;\\n  font-size: 15px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/addresses/ship-address/ship-address.component.scss\n// module id = ../../../../../src/app/user/components/addresses/ship-address/ship-address.component.scss\n// module chunks = index.0","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-ship-address',\n  templateUrl: './ship-address.component.html',\n  styleUrls: ['./ship-address.component.scss']\n})\nexport class ShipAddressComponent implements OnInit {\n  @Input() address: any;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/addresses/ship-address/ship-address.component.ts","module.exports = \"<table *ngIf=\\\"corpOrders\\\">\\n    <tr class=\\\"header-row\\\">\\n        <th>Number</th>\\n        <th>Created</th>\\n        <th>Completed date</th>\\n        <th>Total</th>\\n        <th style=\\\"width: 1%;\\\">Status</th>\\n    </tr>\\n    <tr *ngFor=\\\"let order of corpOrders; let i = index\\\">\\n        <td class=\\\"order-number-cell\\\">{{ order.number }}</td>\\n        <td>{{ order.updated_at | date: 'short' }}</td>\\n        <td>{{ order.completed_at | date: 'short' }}</td>\\n        <td>{{ order.total | currency: order.currency : 'symbol':'.2-2' }}</td>\\n        <td *ngIf=\\\"order.state == 'complete'\\\">\\n            <p class=\\\"green-cell\\\">{{ order.state }}</p>\\n        </td>\\n        <td *ngIf=\\\"order.state == 'cart'\\\">\\n            <p class=\\\"blue-cell\\\">{{ order.state }}</p>\\n        </td>\\n        <td *ngIf=\\\"order.state != 'cart' && order.state != 'complete'\\\">\\n            <p class=\\\"yellow-cell\\\">{{ order.state }}</p>\\n        </td>\\n    </tr>\\n</table>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-orders/corp-orders.component.html\n// module id = ../../../../../src/app/user/components/corp-orders/corp-orders.component.html\n// module chunks = index.0","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"table {\\n  width: 100%; }\\n  table .header-row {\\n    padding-top: 12px;\\n    padding-bottom: 12px;\\n    background-color: #42A948;\\n    color: white; }\\n    table .header-row:hover {\\n      background-color: #42A948; }\\n\\ntable, th, td {\\n  border: 1px solid #ddd;\\n  border-collapse: collapse;\\n  padding: 8px; }\\n\\ntable tr:nth-child(even) {\\n  background-color: #f2f2f2; }\\n\\ntable tr:hover {\\n  background-color: #ddd; }\\n\\ntable td:nth-child(5) {\\n  text-align: center; }\\n\\np {\\n  border-radius: 10px;\\n  margin: 0px;\\n  text-align: center;\\n  border: 1px;\\n  padding: 1px 3px;\\n  color: white; }\\n  p.green-cell {\\n    background-color: #6FB524; }\\n  p.blue-cell {\\n    background-color: #04e2ef; }\\n  p.yellow-cell {\\n    background-color: #efb404; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-orders/corp-orders.component.scss\n// module id = ../../../../../src/app/user/components/corp-orders/corp-orders.component.scss\n// module chunks = index.0","import { Component, OnInit } from '@angular/core';\nimport { UserService } from './../../services/user.service';\nimport { LightOrder } from './../../../core/models/order';\n\n@Component({\n  selector: 'app-corp-orders',\n  templateUrl: './corp-orders.component.html',\n  styleUrls: ['./corp-orders.component.scss']\n})\nexport class CorpOrdersComponent implements OnInit {\n  corpOrders: LightOrder[];\n\n  constructor(\n    private userService: UserService\n  ) {\n    this.userService.getCorpOrders()\n    .subscribe(orders => this.corpOrders = orders)\n  }\n\n  ngOnInit() {\n    \n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-orders/corp-orders.component.ts","module.exports = \"<table>\\n    <tr class=\\\"header-row\\\">\\n        <th>ID</th>\\n        <th>Email</th>\\n        <th>Doctor</th>\\n        <th>License</th>\\n        <th style=\\\"width: 1%;\\\">Status</th>\\n        <th style=\\\"width: 1%;\\\">Action</th>\\n    </tr>\\n    <tr *ngFor=\\\"let user of corpUsers; let i = index\\\">\\n        <td>{{ user.id }}</td>\\n        <td>{{ user.email }}</td>\\n        <td>{{ user.doctor }}</td>\\n        <td>{{ user.lincense }}</td>\\n        <td>{{ user.status }}</td>\\n        <td style=\\\"display: inline-flex\\\" *ngIf=\\\"isUpdated(user)\\\">\\n            <button class=\\\"btn btn-success btn-activate\\\" *ngIf=\\\"user.status == 'deactivated'\\\" (click)=\\\"activate(user.id, 'activated')\\\">Activate</button>\\n            <button class=\\\"btn btn-danger btn-deactivate\\\" *ngIf=\\\"user.status == 'activated'\\\" (click)=\\\"activate(user.id, 'deactivated')\\\">Deactivate</button>\\n            <a [routerLink]=\\\"[user.id]\\\" class=\\\"btn btn-danger\\\">edit</a>\\n            <button class=\\\"btn btn-danger btn-failed\\\" (click)=\\\"remove(user)\\\">remove</button>\\n        </td>\\n    </tr>\\n</table>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-user-list/corp-user-list.component.html\n// module id = ../../../../../src/app/user/components/corp-users/corp-user-list/corp-user-list.component.html\n// module chunks = index.0","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"table {\\n  width: 100%; }\\n  table .header-row {\\n    padding-top: 12px;\\n    padding-bottom: 12px;\\n    background-color: #42A948;\\n    color: white; }\\n    table .header-row:hover {\\n      background-color: #42A948; }\\n\\ntable, th, td {\\n  border: 1px solid #ddd;\\n  border-collapse: collapse;\\n  padding: 8px; }\\n\\ntable tr:nth-child(even) {\\n  background-color: #f2f2f2; }\\n\\ntable tr:hover {\\n  background-color: #ddd; }\\n\\ntable td:nth-child(5) {\\n  text-align: center; }\\n\\n.btn-deactivate, .btn-failed {\\n  background-color: #FF527B;\\n  border-color: #d62929;\\n  width: 90px; }\\n  .btn-deactivate:hover, .btn-failed:hover {\\n    background-color: #de4066; }\\n\\n.btn-activate {\\n  width: 90px; }\\n\\n.btn {\\n  margin: 0 3px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-user-list/corp-user-list.component.scss\n// module id = ../../../../../src/app/user/components/corp-users/corp-user-list/corp-user-list.component.scss\n// module chunks = index.0","import { Component, OnInit, Input } from '@angular/core';\nimport { UserService } from './../../../services/user.service';\n\n@Component({\n  selector: 'app-corp-user-list',\n  templateUrl: './corp-user-list.component.html',\n  styleUrls: ['./corp-user-list.component.scss']\n})\nexport class CorpUserListComponent implements OnInit {\n  @Input() corpUsers;\n\n  constructor(\n    private userService: UserService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  activate(id, status) {\n    let param = {\n      'corp_user': {\n        'status': status\n      }\n    }\n    this.userService.updateCorpUser(id, param)\n      .subscribe(user => {\n        this.corpUsers = this.corpUsers.map(user => {\n          if (user.id == id) {\n            user.status = status;\n          }\n          return user;\n        })\n      })\n  }\n\n  isUpdated(user) {\n    if (JSON.parse(localStorage.getItem('user')).id == user.id)\n      return false;\n    else\n      return true;\n  }\n\n  remove(user) {\n    let index = this.corpUsers.indexOf(user);\n    console.log(index);\n    this.userService.deleteCorpUser(user.id)\n      .subscribe(() => {\n        this.corpUsers.splice(index, 1);\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-user-list/corp-user-list.component.ts","module.exports = \"<div *ngIf=\\\"updateSuccess\\\" class=\\\"success-msg\\\">\\n  Successfully Updated!\\n</div>\\n<form [formGroup]=\\\"addressForm\\\" (ngSubmit)=\\\"update()\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\"> \\n      <div formGroupName=\\\"bill_address_attributes\\\" class=\\\"well well-lg\\\">\\n        <h4>Bill Address</h4>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n\\n            <!-- bill_address_attributes.firstname -->\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': hasError('bill_address_attributes.firstname')}\\\">\\n              <label class=\\\"control-label required\\\">First Name:</label>\\n              <input class=\\\"form-control required\\\" formControlName=\\\"firstname\\\">\\n              <div *ngIf=\\\"hasError('bill_address_attributes.firstname')\\\">\\n                <span *ngIf=\\\"getElementFromFG('bill_address_attributes.firstname', addressForm).errors.required\\\">\\n                  First name is required.\\n                </span>\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"col-md-6\\\">\\n\\n            <!-- bill_address_attributes.lastname -->\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': hasError('bill_address_attributes.lastname')}\\\">\\n              <label class=\\\"control-label required\\\">Last Name:</label>\\n              <input class=\\\"form-control required\\\" formControlName=\\\"lastname\\\">\\n              <div *ngIf=\\\"hasError('bill_address_attributes.lastname')\\\">\\n                <span *ngIf=\\\"getElementFromFG('bill_address_attributes.lastname', addressForm).errors.required\\\">\\n                  Last name is required.\\n                </span>\\n              </div>\\n            </div>\\n\\n          </div>\\n        </div>\\n\\n        <!-- bill_address_attributes.address1 -->\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': hasError('bill_address_attributes.address1')}\\\">\\n          <label class=\\\"control-label required\\\">Address1:</label>\\n          <input class=\\\"form-control required\\\" formControlName=\\\"address1\\\">\\n          <div *ngIf=\\\"hasError('bill_address_attributes.address1')\\\">\\n            <span *ngIf=\\\"getElementFromFG('bill_address_attributes.address1', addressForm).errors.required\\\">\\n              Last name is required.\\n            </span>\\n          </div>\\n        </div>\\n\\n        <!-- bill_address_attributes.address2 -->\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label\\\">Address2:</label>\\n          <input class=\\\"form-control\\\" formControlName=\\\"address2\\\">\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n\\n          <div class=\\\"col-md-6\\\">\\n\\n            <!-- bill_address_attributes.city -->\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': hasError('bill_address_attributes.city')}\\\">\\n              <label class=\\\"control-label required\\\">City:</label>\\n              <input class=\\\"form-control required\\\" formControlName=\\\"city\\\">\\n              <div *ngIf=\\\"hasError('bill_address_attributes.city')\\\">\\n                <span *ngIf=\\\"getElementFromFG('bill_address_attributes.city', addressForm).errors.required\\\">\\n                  City is required.\\n                </span>\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"col-md-3\\\">\\n            \\n            <!-- bill_address_attributes.state_id -->\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': hasError('bill_address_attributes.state_id')}\\\">\\n              <label class=\\\"control-label required\\\" >State:</label>\\n              <select class=\\\"form-control required\\\" formControlName=\\\"state_id\\\">\\n                <option value=\\\"\\\" selected=\\\"selected\\\"></option>\\n                <option *ngFor=\\\"let state of statesForBill\\\" [value]=\\\"state.id\\\">{{ state.name }}</option>\\n              </select>\\n              <div *ngIf=\\\"hasError('bill_address_attributes.state_id')\\\">\\n                <span *ngIf=\\\"getElementFromFG('bill_address_attributes.state_id', addressForm).errors.required\\\">\\n                  State is required.\\n                </span>\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"col-md-3\\\">\\n              \\n            <!-- bill_address_attributes.country_id -->\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': hasError('bill_address_attributes.country_id')}\\\">\\n              <label class=\\\"control-label required\\\" >Country:</label>\\n              <select class=\\\"form-control required\\\" formControlName=\\\"country_id\\\" (change)=\\\"countryForBillChanged($event)\\\">\\n                <option value=\\\"\\\" selected=\\\"selected\\\"></option>\\n                <option *ngFor=\\\"let country of countries\\\" [value]=\\\"country.id\\\">{{ country.name }}</option>\\n              </select>\\n              <div *ngIf=\\\"hasError('bill_address_attributes.country_id')\\\">\\n                <span *ngIf=\\\"getElementFromFG('bill_address_attributes.country_id', addressForm).errors.required\\\">\\n                  County is required.\\n                </span>\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          \\n          <div class=\\\"col-md-6\\\">\\n\\n            <!-- bill_address_attributes.phone -->\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': hasError('bill_address_attributes.phone')}\\\">\\n              <label class=\\\"control-label required\\\">Phone Number:</label>\\n              <input class=\\\"form-control required\\\" formControlName=\\\"phone\\\">\\n              <div *ngIf=\\\"hasError('bill_address_attributes.phone')\\\">\\n                <span *ngIf=\\\"getElementFromFG('bill_address_attributes.phone', addressForm).errors.required\\\">\\n                  Phone Number is required.\\n                </span>\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"col-md-6\\\">\\n\\n            <!-- bill_address_attributes.zipcode -->\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': hasError('bill_address_attributes.zipcode')}\\\">\\n              <label class=\\\"control-label required\\\">Zip Code:</label>\\n              <input class=\\\"form-control required\\\" formControlName=\\\"zipcode\\\">\\n              <div *ngIf=\\\"hasError('bill_address_attributes.zipcode')\\\">\\n                <span *ngIf=\\\"getElementFromFG('bill_address_attributes.zipcode', addressForm).errors.required\\\">\\n                  Zip Code is required.\\n                </span>\\n                <span *ngIf=\\\"getElementFromFG('bill_address_attributes.zipcode', addressForm).errors.pattern\\\">\\n                  Zip Code must be exactly 5 numbers.\\n                </span>\\n              </div>\\n            </div>\\n\\n          </div>\\n          \\n        </div>\\n        \\n\\n\\n\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-md-12\\\"> \\n      <div formGroupName=\\\"ship_address_attributes\\\" class=\\\"well well-lg\\\">\\n        <h4>Ship Address</h4>\\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n\\n            <!-- ship_address_attributes.firstname -->\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': hasError('ship_address_attributes.firstname')}\\\">\\n              <label class=\\\"control-label required\\\">First Name:</label>\\n              <input class=\\\"form-control required\\\" formControlName=\\\"firstname\\\">\\n              <div *ngIf=\\\"hasError('ship_address_attributes.firstname')\\\">\\n                <span *ngIf=\\\"getElementFromFG('ship_address_attributes.firstname', addressForm).errors.required\\\">\\n                  First name is required.\\n                </span>\\n              </div>\\n            </div>\\n  \\n          </div>\\n  \\n          <div class=\\\"col-md-6\\\">\\n    \\n            <!-- ship_address_attributes.lastname -->\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': hasError('ship_address_attributes.lastname')}\\\">\\n              <label class=\\\"control-label required\\\">Last Name:</label>\\n              <input class=\\\"form-control required\\\" formControlName=\\\"lastname\\\">\\n              <div *ngIf=\\\"hasError('ship_address_attributes.lastname')\\\">\\n                <span *ngIf=\\\"getElementFromFG('ship_address_attributes.lastname', addressForm).errors.required\\\">\\n                  Last name is required.\\n                </span>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <!-- ship_address_attributes.address1 -->\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': hasError('ship_address_attributes.address1')}\\\">\\n          <label class=\\\"control-label required\\\">Address1:</label>\\n          <input class=\\\"form-control required\\\" formControlName=\\\"address1\\\">\\n          <div *ngIf=\\\"hasError('ship_address_attributes.address1')\\\">\\n            <span *ngIf=\\\"getElementFromFG('ship_address_attributes.address1', addressForm).errors.required\\\">\\n              Last name is required.\\n            </span>\\n          </div>\\n        </div>\\n\\n        <!-- ship_address_attributes.address2 -->\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label\\\">Address2:</label>\\n          <input class=\\\"form-control\\\" formControlName=\\\"address2\\\">\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n\\n          <div class=\\\"col-md-6\\\">\\n\\n            <!-- ship_address_attributes.city -->\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': hasError('ship_address_attributes.city')}\\\">\\n              <label class=\\\"control-label required\\\">City:</label>\\n              <input class=\\\"form-control required\\\" formControlName=\\\"city\\\">\\n              <div *ngIf=\\\"hasError('ship_address_attributes.city')\\\">\\n                <span *ngIf=\\\"getElementFromFG('ship_address_attributes.city', addressForm).errors.required\\\">\\n                  City is required.\\n                </span>\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"col-md-3\\\">\\n            \\n            <!-- ship_address_attributes.state_id -->\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': hasError('ship_address_attributes.state_id')}\\\">\\n              <label class=\\\"control-label required\\\" >State:</label>\\n              <select class=\\\"form-control required\\\" formControlName=\\\"state_id\\\">\\n                <option value=\\\"\\\" selected=\\\"selected\\\"></option>\\n                <option *ngFor=\\\"let state of statesForShip\\\" [value]=\\\"state.id\\\">{{ state.name }}</option>\\n              </select>\\n              <div *ngIf=\\\"hasError('ship_address_attributes.state_id')\\\">\\n                <span *ngIf=\\\"getElementFromFG('ship_address_attributes.state_id', addressForm).errors.required\\\">\\n                  State is required.\\n                </span>\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"col-md-3\\\">\\n              \\n            <!-- ship_address_attributes.country_id -->\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': hasError('ship_address_attributes.country_id')}\\\">\\n              <label class=\\\"control-label required\\\" >Country:</label>\\n              <select class=\\\"form-control required\\\" formControlName=\\\"country_id\\\" (change)=\\\"countryForShipChanged($event)\\\">\\n                <option value=\\\"\\\" selected=\\\"selected\\\"></option>\\n                <option *ngFor=\\\"let country of countries\\\" [value]=\\\"country.id\\\">{{ country.name }}</option>\\n              </select>\\n              <div *ngIf=\\\"hasError('ship_address_attributes.country_id')\\\">\\n                <span *ngIf=\\\"getElementFromFG('ship_address_attributes.country_id', addressForm).errors.required\\\">\\n                  County is required.\\n                </span>\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n          \\n          <div class=\\\"col-md-6\\\">\\n\\n            <!-- ship_address_attributes.phone -->\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': hasError('ship_address_attributes.phone')}\\\">\\n              <label class=\\\"control-label required\\\">Phone Number:</label>\\n              <input class=\\\"form-control required\\\" formControlName=\\\"phone\\\">\\n              <div *ngIf=\\\"hasError('ship_address_attributes.phone')\\\">\\n                <span *ngIf=\\\"getElementFromFG('ship_address_attributes.phone', addressForm).errors.required\\\">\\n                  Phone Number is required.\\n                </span>\\n              </div>\\n            </div>\\n\\n          </div>\\n\\n          <div class=\\\"col-md-6\\\">\\n\\n            <!-- ship_address_attributes.zipcode -->\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': hasError('ship_address_attributes.zipcode')}\\\">\\n              <label class=\\\"control-label required\\\">Zip Code:</label>\\n              <input class=\\\"form-control required\\\" formControlName=\\\"zipcode\\\">\\n              <div *ngIf=\\\"hasError('ship_address_attributes.zipcode')\\\">\\n                <span *ngIf=\\\"getElementFromFG('ship_address_attributes.zipcode', addressForm).errors.required\\\">\\n                  Zip Code is required.\\n                </span>\\n                <span *ngIf=\\\"getElementFromFG('ship_address_attributes.zipcode', addressForm).errors.pattern\\\">\\n                  Zip Code must be exactly 5 numbers.\\n                </span>\\n              </div>\\n            </div>\\n\\n          </div>\\n          \\n        </div>\\n        \\n      </div>\\n    </div>\\n  </div>\\n\\n  <div style=\\\"margin-bottom: 1em\\\">\\n      <button type=\\\"submit\\\"\\n              class=\\\"btn btn-lg btn-success\\\"\\n              [disabled]=\\\"addressForm.pristine || addressForm.invalid\\\" >Update</button> &nbsp;\\n      <button type=\\\"submit\\\"\\n              class=\\\"btn btn-lg btn-success\\\"\\n              [disabled]=\\\"addressForm.pristine || addressForm.invalid\\\" >Reset</button>\\n  </div>\\n    \\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-user-list/corp-user/corp-user-address/corp-user-address.component.html\n// module id = ../../../../../src/app/user/components/corp-users/corp-user-list/corp-user/corp-user-address/corp-user-address.component.html\n// module chunks = index.0","exports = module.exports = require(\"../../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* Show asterisk for required fields */\\n.control-label.required:after {\\n  color: #FF527B;\\n  content: \\\"*\\\";\\n  margin-left: 5px;\\n  top: 7px; }\\n\\n/* Green & Red borders for validity of required fields */\\n.ng-valid.required {\\n  border-left: 5px solid #42A948;\\n  /* green */ }\\n\\n.ng-invalid:not(form) {\\n  border-left: 5px solid #FF527B;\\n  /* red */ }\\n\\nspan {\\n  color: #FF527B; }\\n\\n.success-msg {\\n  color: #fff;\\n  background: #17d276;\\n  padding: 10px;\\n  font-size: 18px;\\n  width: 70%;\\n  border-radius: 5px;\\n  border: 1px solid;\\n  text-align: center;\\n  margin-bottom: 30px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-user-list/corp-user/corp-user-address/corp-user-address.component.scss\n// module id = ../../../../../src/app/user/components/corp-users/corp-user-list/corp-user/corp-user-address/corp-user-address.component.scss\n// module chunks = index.0","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserService } from './../../../../../services/user.service';\nimport { AddressService } from './../../../../../../core/services/address.service';\nimport { User } from './../../../../../../core/models/user';\nimport { State } from './../../../../../../core/models/state';\nimport { Country } from './../../../../../../core/models/country';\nimport { Address } from './../../../../../../core/models/address';\nimport { Observable, Subscription } from 'rxjs';\nimport { Store} from '@ngrx/store';\nimport { AppState } from './../../../../../../interfaces';\nimport { getCountries } from './../../../../../reducers/selector';\n\n@Component({\n  selector: 'app-corp-user-address',\n  templateUrl: './corp-user-address.component.html',\n  styleUrls: ['./corp-user-address.component.scss']\n})\nexport class CorpUserAddressComponent implements OnInit {\n  userSub$: Subscription;\n  routeSub$: Subscription;\n  corpUser: User;\n  userId: number;\n  countries: Array<Country>;\n  statesForBill: Array<State> = [];\n  statesForShip: Array<State> = [];\n  updateSuccess: boolean;\n\n  addressForm: FormGroup;\n\n  constructor(\n    private userService: UserService,\n    private addrService: AddressService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private store: Store<AppState>\n  ) { }\n\n  ngOnInit() {\n    this.updateSuccess = false;\n    this.store.select(getCountries)\n      .subscribe(countries => {\n        console.log(countries, typeof(countries));\n        this.countries = countries;\n      })\n    \n    this.routeSub$ = this.route.params.subscribe(\n      (params: any) => {\n        this.userId = params['id'];\n        this.userSub$ =\n          this.userService\n          .getCorpUser(this.userId)\n          .subscribe(corpUser => {\n            this.corpUser = corpUser\n            this.initialForm();\n            if (this.corpUser.bill_address)\n             this.getState(this.corpUser.bill_address['country_id'], \"bill\");\n            if (this.corpUser.ship_address)\n             this.getState(this.corpUser.ship_address['country_id'], \"ship\");\n          });\n      });\n\n    this.addressForm = this.formBuilder.group({\n      bill_address_attributes: this.formBuilder.group({\n        firstname: ['', Validators.required ],\n        lastname: ['', Validators.required ],\n        address1: ['', Validators.required ],\n        address2: '',\n        city: ['', Validators.required ],\n        zipcode: ['', [ Validators.required, Validators.pattern(/^\\d{5}$/i) ] ],\n        phone: ['', Validators.required ],\n        state_id: ['', Validators.required ],\n        country_id: ['', Validators.required ]\n      }),\n      ship_address_attributes: this.formBuilder.group({\n        firstname: ['', Validators.required ],\n        lastname: ['', Validators.required ],\n        address1: ['', Validators.required ],\n        address2: '',\n        city: ['', Validators.required ],\n        zipcode: ['', [ Validators.required, Validators.pattern(/^\\d{5}$/i) ] ],\n        phone: ['', Validators.required ],\n        state_id: ['', Validators.required ],\n        country_id: ['', Validators.required ]\n      })\n    });\n  }\n\n  initialForm() {\n    this.addressForm.setValue({\n      bill_address_attributes: this.getInitAddress(this.corpUser.bill_address),\n      ship_address_attributes: this.getInitAddress(this.corpUser.ship_address)\n    });\n\n  }\n\n  getInitAddress(address) {\n    if (address)\n      return {\n        firstname: address['firstname'],\n        lastname: address['lastname'],\n        address1: address['address1'],\n        address2: address['address2'],\n        city: address['city'],\n        zipcode: address['zipcode'],\n        phone: address['phone'],\n        state_id: address['state_id'],\n        country_id: address['country_id']\n      }\n    else\n      return {\n        firstname: '',\n        lastname: '',\n        address1: '',\n        address2: '',\n        city: '',\n        zipcode: '',\n        phone: '',\n        state_id: '',\n        country_id: ''\n      }\n  }\n\n  update() {\n    const formValue = this.addressForm.value;\n    const keys = Object.keys(formValue);\n    const updatedValue = {\n      \"corp_user\": {\n        bill_address_attributes: {\n          firstname: formValue.bill_address_attributes.firstname,\n          lastname: formValue.bill_address_attributes.lastname,\n          address1: formValue.bill_address_attributes.address1,\n          address2: formValue.bill_address_attributes.address2,\n          city: formValue.bill_address_attributes.city,\n          zipcode: formValue.bill_address_attributes.zipcode,\n          phone: formValue.bill_address_attributes.phone,\n          state_id: formValue.bill_address_attributes.state_id,\n          country_id: formValue.bill_address_attributes.country_id\n        },\n        ship_address_attributes: {\n          firstname: formValue.ship_address_attributes.firstname,\n          lastname: formValue.ship_address_attributes.lastname,\n          address1: formValue.ship_address_attributes.address1,\n          address2: formValue.ship_address_attributes.address2,\n          city: formValue.ship_address_attributes.city,\n          zipcode: formValue.ship_address_attributes.zipcode,\n          phone: formValue.ship_address_attributes.phone,\n          state_id: formValue.ship_address_attributes.state_id,\n          country_id: formValue.ship_address_attributes.country_id\n        }\n      }\n    };\n\n    this.userService.updateCorpUser(this.userId, updatedValue)\n      .subscribe( data => {\n        const errors = data.errors;\n        if (errors) {\n          //\n          console.log(\"errors\", errors)\n        } else {\n          console.log(\"============\", data)\n          this.updateSuccess = true;\n        }\n      })\n    console.log(updatedValue);\n  }\n\n    /**\n   * Return true if an element has failed validation.\n   * Utilizes getElementFromFG() to obtain elements from nested FormGroups.\n   */\n  hasError(input: string): boolean {\n    const target = this.getElementFromFG(input, this.addressForm);\n    return  target.invalid &&\n      ( target.dirty ||\n        target.touched );\n  }\n\n  /**\n   * Retrieve an element from a FormGroup (nested or non-nested).\n   * Example: to retrieve centerAppForm.address.address1, do:\n   * getElementFromNestedFormGroup('address.address1', this.centerAppForm)\n   */\n  getElementFromFG(input: string, target: any): any {\n    return input.split('.').reduce((obj, key) => {\n      return (<FormGroup>obj).get(key);\n    }, target);\n  }\n\n  countryForBillChanged(event) {\n    let selectedCountryId = event.target.value;\n    this.getState(selectedCountryId, \"bill\");\n    // this.addressForm.controls['bill_address_attributes']['state_id'].setValue();\n  }\n  \n  countryForShipChanged(event) {\n    let selectedCountryId = event.target.value;\n    this.getState(selectedCountryId, \"ship\");\n    // this.addressForm.controls['bill_address_attributes']['state_id'].setValue();\n  }\n\n  getState(id, type) {\n    let countries = this.countries\n      .filter(country => country.id == id)\n    if (type == \"bill\")\n      this.statesForBill = countries[0].states;\n    else\n      this.statesForShip = countries[0].states;\n  }\n\n  private pushErrorFor(ctrl_name: string, msg: string) {\n    this.addressForm.controls[ctrl_name].setErrors({'msg': msg});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-user-list/corp-user/corp-user-address/corp-user-address.component.ts","module.exports = \"<div class=\\\"action\\\">\\n  <div *ngIf=\\\"updateSuccess\\\" class=\\\"success-msg\\\">\\n    Successfully Updated!\\n  </div>\\n  <a class=\\\"btn btn-success\\\" [routerLink]=\\\"['address']\\\">\\n    Change Address\\n  </a>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <form [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"update()\\\">  <!-- ?-->\\n    \\n    <div class=\\\"col-md-12\\\">\\n\\n      <!-- email -->\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': hasError('email')}\\\">\\n        <label class=\\\"control-label required\\\">User Email:</label>\\n        <input class=\\\"form-control required\\\" formControlName=\\\"email\\\">\\n        <div *ngIf=\\\"hasError('email')\\\">\\n          <span *ngIf=\\\"getElementFromFG('email', userForm).errors.required\\\">\\n            Email is required\\n          </span>\\n        </div>\\n      </div>\\n\\n    </div>\\n    \\n\\n    <div class=\\\"col-md-6\\\">\\n      \\n      <!-- doctor -->\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': hasError('doctor')}\\\">\\n        <label class=\\\"control-label required\\\">Doctor:</label>\\n        <input class=\\\"form-control required\\\" formControlName=\\\"doctor\\\">\\n        <div *ngIf=\\\"hasError('doctor')\\\">\\n          <span *ngIf=\\\"getElementFromFG('doctor', userForm).errors.required\\\">\\n            Doctor name is required\\n          </span>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"col-md-6\\\">\\n\\n      <!-- license -->\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': hasError('license')}\\\">\\n        <label class=\\\"control-label required\\\">License:</label>\\n        <input class=\\\"form-control required\\\" formControlName=\\\"license\\\">\\n        <div *ngIf=\\\"hasError('license')\\\">\\n          <span *ngIf=\\\"getElementFromFG('license', userForm).errors.required\\\">\\n            Doctor license is required\\n          </span>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"col-md-6\\\">\\n      \\n      <!-- Password -->\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': hasError('password')}\\\">\\n        <label class=\\\"control-label required\\\">Password:</label>\\n        <input type=\\\"password\\\" class=\\\"form-control required\\\" formControlName=\\\"password\\\">\\n        <div *ngIf=\\\"hasError('password')\\\">\\n          <span *ngIf=\\\"getElementFromFG('password', userForm).errors.required\\\">\\n            Password is required\\n          </span>\\n          <span *ngIf=\\\"getElementFromFG('password', userForm).errors.minlength\\\">\\n            Password must be more than 6 letters.\\n          </span>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"col-md-6\\\">\\n      \\n      <!-- Password Confirmation-->\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': hasError('password_confirmation')}\\\">\\n        <label class=\\\"control-label required\\\">Password Confirm:</label>\\n        <input type=\\\"password\\\" class=\\\"form-control required\\\" formControlName=\\\"password_confirmation\\\">\\n        <div *ngIf=\\\"hasError('password_confirmation')\\\">\\n          <span *ngIf=\\\"getElementFromFG('password_confirmation', userForm).errors.required\\\">\\n            Password confirmation is required\\n          </span>\\n          <span *ngIf=\\\"getElementFromFG('password_confirmation', userForm).errors.msg\\\">\\n            Password Conirmation {{getElementFromFG('password_confirmation', userForm).errors.msg}}\\n          </span>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <br/>\\n    <div style=\\\"margin-top: 20px; float: right;\\\">\\n        <button type=\\\"submit\\\"\\n                class=\\\"btn btn-lg btn-success\\\"\\n                [disabled]=\\\"userForm.pristine || userForm.invalid\\\" >Update</button> &nbsp;\\n        <button type=\\\"submit\\\"\\n                class=\\\"btn btn-lg btn-success\\\"\\n                [disabled]=\\\"userForm.pristine || userForm.invalid\\\" >Reset</button>\\n    </div>\\n  </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-user-list/corp-user/corp-user.component.html\n// module id = ../../../../../src/app/user/components/corp-users/corp-user-list/corp-user/corp-user.component.html\n// module chunks = index.0","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* Show asterisk for required fields */\\n.control-label.required:after {\\n  color: #FF527B;\\n  content: \\\"*\\\";\\n  margin-left: 5px;\\n  top: 7px; }\\n\\n/* Green & Red borders for validity of required fields */\\n.ng-valid.required {\\n  border-left: 5px solid #42A948;\\n  /* green */ }\\n\\n.ng-invalid:not(form) {\\n  border-left: 5px solid #FF527B;\\n  /* red */ }\\n\\nspan {\\n  color: #FF527B; }\\n\\n.action {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center;\\n  margin-bottom: 30px;\\n  -webkit-box-pack: justify;\\n      -ms-flex-pack: justify;\\n          justify-content: space-between; }\\n  .action a {\\n    height: 35px;\\n    margin-left: auto; }\\n\\n.success-msg {\\n  color: #fff;\\n  background: #17d276;\\n  padding: 10px;\\n  font-size: 18px;\\n  width: 70%;\\n  border-radius: 5px;\\n  border: 1px solid;\\n  text-align: center; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-user-list/corp-user/corp-user.component.scss\n// module id = ../../../../../src/app/user/components/corp-users/corp-user-list/corp-user/corp-user.component.scss\n// module chunks = index.0","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserService } from './../../../../services/user.service';\nimport { User } from './../../../../../core/models/user';\nimport { Observable, Subscription } from 'rxjs';\nimport { Store} from '@ngrx/store';\nimport { AppState } from './../../../../../interfaces';\n\n@Component({\n  selector: 'app-corp-user',\n  templateUrl: './corp-user.component.html',\n  styleUrls: ['./corp-user.component.scss']\n})\nexport class CorpUserComponent implements OnInit {\n  userSub$: Subscription;\n  routeSub$: Subscription;\n  corpUser: User;\n  userId: number;\n  updateSuccess: boolean;\n\n  userForm: FormGroup;\n\n  constructor(\n    private userService: UserService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private store: Store<AppState>\n  ) { \n\n  }\n\n  ngOnInit() {\n    this.updateSuccess = false;\n    \n    this.routeSub$ = this.route.params.subscribe(\n      (params: any) => {\n        this.userId = params['id'];\n        this.userSub$ =\n          this.userService\n          .getCorpUser(this.userId)\n          .subscribe(corpUser => {\n            this.corpUser = corpUser\n            this.initialForm();\n          });\n      });\n\n    this.userForm = this.formBuilder.group({\n      email: ['', Validators.required ],\n      doctor: ['', Validators.required ],\n      license: ['', Validators.required ],\n      password: ['', [Validators.required, Validators.minLength(6)] ],\n      password_confirmation: ['', Validators.required ]\n    });\n  }\n\n  initialForm() {\n    this.userForm.setValue({\n      email: this.corpUser.email,\n      doctor: this.corpUser.doctor,\n      license: this.corpUser.license,\n      password: '',\n      password_confirmation: ''\n    });\n\n  }\n\n  update() {\n    const formValue = this.userForm.value;\n    const keys = Object.keys(formValue);\n    const updatedValue = {\n      \"corp_user\": {\n        email: formValue.email,\n        doctor: formValue.doctor,\n        license: formValue.license,\n        password: formValue.password,\n        password_confirmation: formValue.password_confirmation\n      }\n    };\n\n    this.userService.updateCorpUser(this.userId, updatedValue)\n      .subscribe( data => {\n        const errors = data.errors;\n        if (errors) {\n          keys.forEach(val => {\n            if(errors[val]) this.pushErrorFor(val, errors[val][0]);\n          })\n        } else {\n          this.updateSuccess = true;\n        }\n      })\n    console.log(updatedValue);\n  }\n\n  private pushErrorFor(ctrl_name: string, msg: string) {\n    this.userForm.controls[ctrl_name].setErrors({'msg': msg});\n  }\n  \n    /**\n   * Return true if an element has failed validation.\n   * Utilizes getElementFromFG() to obtain elements from nested FormGroups.\n   */\n  hasError(input: string): boolean {\n    const target = this.getElementFromFG(input, this.userForm);\n    return  target.invalid &&\n      ( target.dirty ||\n        target.touched );\n  }\n\n  /**\n   * Retrieve an element from a FormGroup (nested or non-nested).\n   * Example: to retrieve centerAppForm.address.address1, do:\n   * getElementFromNestedFormGroup('address.address1', this.centerAppForm)\n   */\n  getElementFromFG(input: string, target: any): any {\n    return input.split('.').reduce((obj, key) => {\n      return (<FormGroup>obj).get(key);\n    }, target);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-user-list/corp-user/corp-user.component.ts","module.exports = \"<div *ngIf=\\\"createSuccess\\\" class=\\\"success-msg\\\">\\n  \\\"{{userForm.value['email']}}\\\" is successfully created!\\n</div>\\n\\n<div>\\n  <form [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"createCorpUser()\\\">  <!-- ?-->\\n    \\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        \\n        <!-- email -->\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': hasError('email')}\\\">\\n          <label class=\\\"control-label required\\\">User Email:</label>\\n          <input class=\\\"form-control required\\\" formControlName=\\\"email\\\">\\n          <div *ngIf=\\\"hasError('email')\\\">\\n            <span *ngIf=\\\"getElementFromFG('email', userForm).errors.required\\\">\\n              Email is required\\n            </span>\\n            <span *ngIf=\\\"getElementFromFG('email', userForm).errors.msg\\\">\\n              Email {{getElementFromFG('email', userForm).errors.msg}}\\n            </span>\\n          </div>\\n        </div>\\n  \\n      </div>      \\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        \\n        <!-- doctor -->\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': hasError('doctor')}\\\">\\n          <label class=\\\"control-label required\\\">Doctor:</label>\\n          <input class=\\\"form-control required\\\" formControlName=\\\"doctor\\\">\\n          <div *ngIf=\\\"hasError('doctor')\\\">\\n            <span *ngIf=\\\"getElementFromFG('doctor', userForm).errors.required\\\">\\n              Doctor name is required\\n            </span>\\n          </div>\\n        </div>\\n  \\n      </div>\\n\\n      <div class=\\\"col-md-6\\\">\\n        \\n        <!-- license -->\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': hasError('license')}\\\">\\n          <label class=\\\"control-label required\\\">License:</label>\\n          <input class=\\\"form-control required\\\" formControlName=\\\"license\\\">\\n          <div *ngIf=\\\"hasError('license')\\\">\\n            <span *ngIf=\\\"getElementFromFG('license', userForm).errors.required\\\">\\n              Doctor license is required\\n            </span>\\n          </div>\\n        </div>\\n  \\n      </div>      \\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        \\n        <!-- Password -->\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': hasError('password')}\\\">\\n          <label class=\\\"control-label required\\\">Password:</label>\\n          <input type=\\\"password\\\" class=\\\"form-control required\\\" formControlName=\\\"password\\\">\\n          <div *ngIf=\\\"hasError('password')\\\">\\n            <span *ngIf=\\\"getElementFromFG('password', userForm).errors.required\\\">\\n              Password is required\\n            </span>\\n            <span *ngIf=\\\"getElementFromFG('password', userForm).errors.minlength\\\">\\n              Password must be more than 6 letters.\\n            </span>\\n          </div>\\n        </div>\\n  \\n      </div>\\n  \\n      <div class=\\\"col-md-6\\\">\\n        \\n        <!-- Password Confirmation-->\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': hasError('password_confirmation')}\\\">\\n          <label class=\\\"control-label required\\\">Password Confirm:</label>\\n          <input type=\\\"password\\\" class=\\\"form-control required\\\" formControlName=\\\"password_confirmation\\\">\\n          <div *ngIf=\\\"hasError('password_confirmation')\\\">\\n            <span *ngIf=\\\"getElementFromFG('password_confirmation', userForm).errors.required\\\">\\n              Password confirmation is required\\n            </span>\\n            <span *ngIf=\\\"getElementFromFG('password_confirmation', userForm).errors.msg\\\">\\n              Password {{getElementFromFG('password_confirmation', userForm).errors.msg}}\\n            </span>\\n          </div>\\n        </div>\\n  \\n      </div>\\n    </div>\\n\\n    <div style=\\\"margin-top: 20px; float: right\\\">\\n      <button type=\\\"submit\\\"\\n              class=\\\"btn btn-success\\\"\\n              [disabled]=\\\"userForm.pristine || userForm.invalid\\\" >Create</button>\\n    </div>\\n    \\n  </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-user-sign-up/corp-user-sign-up.component.html\n// module id = ../../../../../src/app/user/components/corp-users/corp-user-sign-up/corp-user-sign-up.component.html\n// module chunks = index.0","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* Show asterisk for required fields */\\n.control-label.required:after {\\n  color: #FF527B;\\n  content: \\\"*\\\";\\n  margin-left: 5px;\\n  top: 7px; }\\n\\n/* Green & Red borders for validity of required fields */\\n.ng-valid.required {\\n  border-left: 5px solid #42A948;\\n  /* green */ }\\n\\n.ng-invalid:not(form) {\\n  border-left: 5px solid #FF527B;\\n  /* red */ }\\n\\nspan {\\n  color: #FF527B; }\\n\\n.success-msg {\\n  color: #fff;\\n  background: #17d276;\\n  padding: 10px;\\n  font-size: 18px;\\n  width: 70%;\\n  border-radius: 5px;\\n  border: 1px solid;\\n  text-align: center;\\n  margin-bottom: 30px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-user-sign-up/corp-user-sign-up.component.scss\n// module id = ../../../../../src/app/user/components/corp-users/corp-user-sign-up/corp-user-sign-up.component.scss\n// module chunks = index.0","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserService } from './../../../services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-corp-user-sign-up',\n  templateUrl: './corp-user-sign-up.component.html',\n  styleUrls: ['./corp-user-sign-up.component.scss']\n})\nexport class CorpUserSignUpComponent implements OnInit {\n  userForm: FormGroup;\n  createSuccess: boolean;\n\n  constructor(\n    private userService: UserService,\n    private formBuilder: FormBuilder,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.createSuccess = false;\n    this.userForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      doctor: ['', Validators.required],\n      license: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      password_confirmation: ['', Validators.required]\n    })\n  }\n\n  createCorpUser() {\n    const formValue = this.userForm.value;\n    const keys = Object.keys(formValue);\n\n    const corpUser = {\n      email: formValue.email,\n      doctor: formValue.doctor,\n      license: formValue.license,\n      password: formValue.password,\n      password_confirmation: formValue.password_confirmation\n    }\n    if (!this.createSuccess){\n      this.userService.createCorpUser({'corp_user': corpUser})\n      .subscribe(data => {\n        const errors = data.errors;\n        if (errors) {\n          keys.forEach(val => {\n            if(errors[val]) this.pushErrorFor(val, errors[val][0]);\n          })\n        } else {\n          this.createSuccess = true;\n        }\n      });\n    }\n  }\n\n  private pushErrorFor(ctrl_name: string, msg: string) {\n    this.userForm.controls[ctrl_name].setErrors({'msg': msg});\n  }\n\n  /**\n   * Return true if an element has failed validation.\n   * Utilizes getElementFromFG() to obtain elements from nested FormGroups.\n   */\n  hasError(input: string): boolean {\n    const target = this.getElementFromFG(input, this.userForm);\n    return  target.invalid &&\n      ( target.dirty ||\n        target.touched );\n  }\n\n  /**\n   * Retrieve an element from a FormGroup (nested or non-nested).\n   * Example: to retrieve centerAppForm.address.address1, do:\n   * getElementFromNestedFormGroup('address.address1', this.centerAppForm)\n   */\n  getElementFromFG(input: string, target: any): any {\n    return input.split('.').reduce((obj, key) => {\n      return (<FormGroup>obj).get(key);\n    }, target);\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-user-sign-up/corp-user-sign-up.component.ts","module.exports = \"<a [routerLink]=\\\"['create']\\\" class=\\\"btn btn-success btn-corp-create\\\">Create New Corporate User</a>\\n\\n<app-corp-user-list [corpUsers]=\\\"corpUsers\\\"></app-corp-user-list>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-users.component.html\n// module id = ../../../../../src/app/user/components/corp-users/corp-users.component.html\n// module chunks = index.0","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".btn-corp-create {\\n  float: right;\\n  margin-bottom: 30px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-users.component.scss\n// module id = ../../../../../src/app/user/components/corp-users/corp-users.component.scss\n// module chunks = index.0","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { UserService } from './../../services/user.service';\nimport { User } from './../../../core/models/user';\nimport { Observable, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-corp-users',\n  templateUrl: './corp-users.component.html',\n  styleUrls: ['./corp-users.component.scss']\n})\nexport class CorpUsersComponent implements OnInit {\n  userSub$: Subscription;\n  corpUsers: User[];\n\n  constructor(\n    private userService: UserService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.userSub$ = this.userService.getCorpUsers()\n                    .subscribe(users => {\n                      console.log(users);\n                      this.corpUsers = users;\n                    });\n  }\n  \n  \n  ngOnDestroy() {\n    this.userSub$.unsubscribe();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/corp-users/corp-users.component.ts","module.exports = \"<div *ngIf=\\\"(orders$ | async)?.length; else elseBlock\\\">\\n  <div *ngFor=\\\"let order of (orders$ | async)\\\">\\n    <app-order-list-item [order]=\\\"order\\\" *ngIf=\\\"order.original_line_item == origin_item\\\"></app-order-list-item>\\n  </div>  \\n</div>    \\n<ng-template #elseBlock>\\n  <div class=\\\"cart-empty\\\">\\n    <div class=\\\"empty-cart-icon\\\"></div>\\n    <div class=\\\"empty-cart-message\\\">You have'nt ordered anything yet.</div>\\n    <a class=\\\"empty-wishlist-link\\\" routerLink=\\\"/home\\\">Start Shopping</a>\\n  </div>\\n</ng-template>  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/order-ajust/order-ajust.component.html\n// module id = ../../../../../src/app/user/components/orders/order-ajust/order-ajust.component.html\n// module chunks = index.0","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".cart-empty {\\n  min-height: 500px;\\n  text-align: center; }\\n  .cart-empty .empty-cart-icon {\\n    height: 85px;\\n    width: 85px;\\n    margin: 0 auto;\\n    background-image: url(/assets/shoppingbag.png); }\\n  .cart-empty .empty-cart-message {\\n    font-size: 20px;\\n    color: #535766;\\n    font-weight: 600;\\n    font-family: \\\"Whitney-semi-bold\\\";\\n    line-height: 120px;\\n    margin: 15px 0; }\\n  .cart-empty .empty-wishlist-link {\\n    color: #526cd0;\\n    font-size: 16px;\\n    font-weight: 500; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/order-ajust/order-ajust.component.scss\n// module id = ../../../../../src/app/user/components/orders/order-ajust/order-ajust.component.scss\n// module chunks = index.0","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { LightOrder } from '../../../../core/models/order';\nimport { getUserOrders } from '../../../reducers/selector';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../../interfaces';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-order-ajust',\n  templateUrl: './order-ajust.component.html',\n  styleUrls: ['./order-ajust.component.scss']\n})\nexport class OrderAjustComponent implements OnInit {\n  orders$: Observable<LightOrder[]>;\n  routeSubscription$: Subscription;\n  origin_item: string;\n\n  constructor(\n    private store: Store<AppState>,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.orders$ = this.store.select(getUserOrders);\n  }\n\n  ngOnInit() {\n    this.routeSubscription$ = this.route.params.subscribe(\n      (params: any) => {\n        this.origin_item = params['number'];\n      });    \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/order-ajust/order-ajust.component.ts","module.exports = \"<div *ngIf=\\\"order\\\">\\r\\n    <div class=\\\"panel panel-default\\\">\\r\\n        <div class=\\\"panel-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"active col-md-6\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <small>SHIPMENT</small>\\r\\n                            <h5>\\r\\n                                <i class=\\\"fa fa-{{order.currency | lowercase}}\\\" aria-hidden=\\\"true\\\"></i> {{order.total}}\\r\\n                            </h5>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <small>STATUS</small>\\r\\n                            <h5 class=\\\"status\\\">\\r\\n                                {{order.shipment_state | uppercase}}\\r\\n                            </h5>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n                            <small>ITEMS</small>\\r\\n                            <h5>\\r\\n                                {{order.line_items.length}}\\r\\n                            </h5>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <hr>\\r\\n            <div class='row' *ngFor=\\\"let line_item of order.line_items\\\">\\r\\n                <br>\\r\\n                <div class=\\\"col-md-2\\\">\\r\\n                    <img class=\\\"line_item_image\\\" [src]=\\\"getProductImageUrl(line_item)\\\" alt=\\\"Line Item\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                    <h5 class=\\\"ptitle\\\">\\r\\n                        <a [routerLink]=\\\"['/product', line_item.product_slug]\\\">\\r\\n                            <span class=\\\"text-uppercase text-primary\\\">{{line_item.product_name}}</span>\\r\\n                        </a>\\r\\n                    </h5>\\r\\n                    <h6 class=\\\"\\\" *ngIf=\\\"line_item.adjustment_slug\\\">\\r\\n                        <a (click)=\\\"createAdjOrder(line_item)\\\">\\r\\n                            <span style=\\\"cursor: pointer\\\">Request Adjustment</span>\\r\\n                        </a>\\r\\n                    </h6>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-2\\\">\\r\\n                    <h5 class=\\\"strong\\\">\\r\\n                        <i class=\\\"fa fa-{{order.currency | lowercase}}\\\" aria-hidden=\\\"true\\\"></i> {{line_item.total}}\\r\\n                    </h5>\\r\\n                    <small>\\r\\n                        MRP: \\r\\n                        <i class=\\\"fa fa-{{order.currency | lowercase}}\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                        {{line_item.total}}\\r\\n                    </small><br/>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-2\\\">\\r\\n                    <h5 class=\\\"strong\\\">\\r\\n                        {{line_item.number}}\\r\\n                    </h5>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                    <h5 class=\\\"strong\\\">\\r\\n                        <div class=\\\"pull-right\\\">\\r\\n                            <a (click)=\\\"caseView(line_item.id)\\\" class=\\\"view-details-link strong\\\" style=\\\"cursor: pointer\\\">View Case</a>\\r\\n                        </div>\\r\\n                    </h5>\\r\\n                </div>\\r\\n            </div>\\r\\n            <br>\\r\\n            <div class=\\\"divider\\\"></div>\\r\\n            <div *ngFor=\\\"let shipment of order.shipments\\\">\\r\\n                <app-ship-item [shipment]=\\\"shipment\\\" [lineItems]=\\\"getFocusedLineItems(shipment)\\\"></app-ship-item>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <br>\\r\\n    <!-- <h5>SHIPPING DETAILS</h5>\\r\\n  <div class=\\\"panel panel-default\\\">\\r\\n    <div class=\\\"row panel-body\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <h5>Order No: {{order.number}}</h5>\\r\\n      </div>\\r\\n      \\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <address>\\r\\n          <strong>{{order.ship_address.full_name}}.</strong><br>\\r\\n          {{order.ship_address.address1}}<br>\\r\\n          {{order.ship_address.address2}}<br>\\r\\n          {{order.ship_address.city}}, {{order.ship_address.zipcode}}<br>\\r\\n          <abbr title=\\\"Phone\\\">P:</abbr> {{order.ship_address.phone}}\\r\\n        </address>\\r\\n      </div>\\r\\n\\r\\n      <dl class=\\\"col-md-12\\\">\\r\\n        <dt>\\r\\n          Total Amount:\\r\\n          <i class=\\\"fa fa-{{order.currency | lowercase}}\\\" aria-hidden=\\\"true\\\"></i>\\r\\n          {{order.total}}\\r\\n        </dt>\\r\\n        \\r\\n        <dd>\\r\\n          MRP: \\r\\n          <i class=\\\"fa fa-{{order.currency | lowercase}}\\\" aria-hidden=\\\"true\\\"></i>\\r\\n          {{order.item_total}}\\r\\n        </dd>\\r\\n\\r\\n        <dd>\\r\\n          Shipping: \\r\\n          <i class=\\\"fa fa-{{order.currency | lowercase}}\\\" aria-hidden=\\\"true\\\"></i>\\r\\n          {{order.ship_total}}\\r\\n        </dd>\\r\\n        \\r\\n        <dd>\\r\\n          Adjustment: \\r\\n          <i class=\\\"fa fa-{{order.currency | lowercase}}\\\" aria-hidden=\\\"true\\\"></i>\\r\\n          {{order.adjustment_total}}\\r\\n        </dd>\\r\\n      </dl>\\r\\n\\r\\n      <dl class=\\\"col-md-12\\\">\\r\\n        <dt>\\r\\n          Payment: {{order.payment_state | humanize | uppercase}}\\r\\n        </dt>\\r\\n      </dl>\\r\\n    </div>\\r\\n  </div> -->\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/order-detail/order-detail.component.html\n// module id = ../../../../../src/app/user/components/orders/order-detail/order-detail.component.html\n// module chunks = index.0","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".status {\\n  color: #20bd99; }\\n\\n.line_item_image {\\n  border: 1px solid #eee; }\\n\\n.divider {\\n  width: 100%;\\n  border-top: 1px dashed #94969f;\\n  height: 5px;\\n  display: inline-block !important;\\n  background: #fff;\\n  color: #535766 !important;\\n  padding: 0 !important; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/order-detail/order-detail.component.scss\n// module id = ../../../../../src/app/user/components/orders/order-detail/order-detail.component.scss\n// module chunks = index.0","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from '../../../../interfaces';\r\nimport { UserActions } from '../../../actions/user.actions';\r\nimport { UserService } from '../../../services/user.service';\r\nimport { LightOrder } from '../../../../core/models/order';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { environment } from '../../../../../environments/environment';\r\nimport { LightLineItem } from '../../../../core/models/line_item';\r\nimport { LightShipment } from './../../../../core/models/shipment';\r\nimport { CheckoutActions } from '../../../../checkout/actions/checkout.actions'\r\nimport { getAdjustmentOrder } from '../../../../checkout/reducers/selectors'\r\nimport { getUserOrders } from '../../../reducers/selector';\r\n\r\n@Component({\r\n  selector: 'app-order-detail',\r\n  templateUrl: './order-detail.component.html',\r\n  styleUrls: ['./order-detail.component.scss']\r\n})\r\nexport class OrderDetailComponent implements OnInit, OnDestroy {\r\n  routeSubscription$: Subscription;\r\n  orderSubscription$: Subscription;\r\n  childSubscription$: Subscription;\r\n  orderNumber: string;\r\n  order: LightOrder;\r\n  userOrder$: Observable<any>;\r\n\r\n  constructor(\r\n    private store: Store<AppState>,\r\n    private checkout: CheckoutActions,\r\n    private userService: UserService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n    this.userOrder$ = this.store.select(getUserOrders)\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.routeSubscription$ = this.route.params.subscribe(\r\n      (params: any) => {\r\n        this.orderNumber = params['number'];\r\n        this.orderSubscription$ =\r\n          this.userService\r\n          .getOrderDetail(this.orderNumber)\r\n          .subscribe(order => this.order = order);\r\n     });\r\n  }\r\n\r\n  getProductImageUrl(line_item: LightLineItem) {\r\n    return environment.API_ENDPOINT + line_item.image_url;\r\n  }\r\n\r\n  createAdjOrder(line_item: any){\r\n    this.router.navigate(['/product', line_item.adjustment_slug]);\r\n    this.store.dispatch(this.checkout.updateAdjustmentOrder(line_item.id.toString()));\r\n  }\r\n\r\n  caseView(id: any){\r\n    this.router.navigate(['/user', 'orders', 'adjust', id]);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.routeSubscription$.unsubscribe();\r\n    this.orderSubscription$.unsubscribe();\r\n    if (this.childSubscription$)\r\n      this.childSubscription$.unsubscribe();\r\n  }\r\n\r\n  getFocusedLineItems(shipment: LightShipment) {\r\n    return this.order.line_items.filter(lineItem => {\r\n      for (let i = 0; i < shipment.line_item_ids.length; i ++) {\r\n        if (lineItem.id == shipment.line_item_ids[i])\r\n          return lineItem;\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/order-detail/order-detail.component.ts","module.exports = \"<div class=\\\"row ship-item\\\">\\n  <div class=\\\"col-md-3 type-con\\\" *ngIf=\\\"shipment.is_consolidated\\\">\\n      Consolidated Shipping\\n  </div>\\n\\n  <div class=\\\"col-md-3 type-ind\\\" *ngIf=\\\"!shipment.is_consolidated\\\">\\n      Individual Shipping\\n  </div>\\n\\n  <div class=\\\"col-md-3 number\\\">\\n      {{shipment.number}}\\n  </div>\\n\\n  <div class=\\\"col-md-3 method\\\">\\n      {{shipment.shipping_method}}\\n  </div>\\n\\n  <div class=\\\"col-md-1 cost\\\">\\n      ${{shipment.cost}}\\n  </div>\\n\\n  <div class=\\\"col-md-2 btn-detail\\\">\\n      <a (click)=\\\"clickDetail()\\\">Details</a>\\n  </div>\\n</div>\\n<div *ngIf=\\\"isDetailed\\\">\\n  <div class=\\\"row line-item\\\" *ngFor=\\\"let lineItem of lineItems\\\">\\n      <div class=\\\"col-md-4\\\">\\n      </div>\\n      <div class=\\\"col-md-2 img\\\">\\n          <img class=\\\"line-item-img\\\" [src]=\\\"getProductImageUrl(lineItem)\\\" alt=\\\"Line Item\\\">\\n      </div>\\n\\n      <div class=\\\"col-md-3 title\\\">\\n          <h5 class=\\\"ptitle\\\">\\n            <span class=\\\"text-uppercase text-primary\\\">{{lineItem.product_name}}</span>\\n          </h5>\\n      </div>\\n\\n      <div class=\\\"col-md-2 total\\\">\\n          <h5 class=\\\"strong\\\">\\n            $ {{lineItem.total}}\\n          </h5>\\n      </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/order-detail/ship-item/ship-item.component.html\n// module id = ../../../../../src/app/user/components/orders/order-detail/ship-item/ship-item.component.html\n// module chunks = index.0","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ship-item {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center; }\\n  .ship-item .type-con {\\n    background: #20bd99;\\n    color: #fff;\\n    text-align: center; }\\n  .ship-item .type-ind {\\n    background: #fff;\\n    color: #20bd99;\\n    border: 1px solid;\\n    border-color: #20bd99;\\n    text-align: center; }\\n  .ship-item .number, .ship-item .cost {\\n    color: #20bd99;\\n    text-align: center; }\\n  .ship-item .method {\\n    font-weight: bold;\\n    text-align: center; }\\n  .ship-item .btn-detail {\\n    text-align: right;\\n    color: #1ba182; }\\n\\n.line-item {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center; }\\n  .line-item .img {\\n    text-align: center; }\\n    .line-item .img .line-item-img {\\n      border: 1px solid #eee;\\n      width: 60px; }\\n  .line-item .title, .line-item .total {\\n    text-align: center; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/order-detail/ship-item/ship-item.component.scss\n// module id = ../../../../../src/app/user/components/orders/order-detail/ship-item/ship-item.component.scss\n// module chunks = index.0","import { Component, OnInit, Input } from '@angular/core';\nimport { environment } from './../../../../../../environments/environment';\nimport { LightLineItem } from './../../../../../core/models/line_item';\nimport { LightShipment } from './../../../../../core/models/shipment';\n\n@Component({\n  selector: 'app-ship-item',\n  templateUrl: './ship-item.component.html',\n  styleUrls: ['./ship-item.component.scss']\n})\nexport class ShipItemComponent implements OnInit {\n  @Input() shipment: LightShipment;\n  @Input() lineItems: LightLineItem[];\n  isDetailed: boolean;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.isDetailed = false;\n    console.log(\"line\", this.lineItems);\n  }\n\n  clickDetail() {\n    this.isDetailed = !this.isDetailed;\n  }\n\n  getProductImageUrl(line_item: LightLineItem) {\n    return environment.API_ENDPOINT + line_item.image_url;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/order-detail/ship-item/ship-item.component.ts","module.exports = \"<div class=\\\"panel panel-default\\\">\\r\\n    <div class=\\\"panel-body\\\">\\r\\n        <h5 class=\\\"active\\\">{{order.shipment_state | uppercase}}</h5>\\r\\n        <h5 class=\\\"active\\\" style=\\\"color: #20bd99\\\">Order Number: {{order.number}}</h5>\\r\\n        <small>\\r\\n      Placed on {{order.created_at | date:'fullDate'}} / \\r\\n      <i\\r\\n        class=\\\"fa fa-{{order.currency | lowercase}}\\\"\\r\\n        aria-hidden=\\\"true\\\">\\r\\n      </i>{{order.total}} / \\r\\n      {{order.line_items.length}} items /\\r\\n      Payment: {{order.payment_state | humanize | uppercase}}\\r\\n    </small>\\r\\n        <hr>\\r\\n        <h5 class=\\\"strong\\\">\\r\\n            Shipment: {{order.line_items.length}} items | {{order.shipment_state | uppercase}} on {{order.updated_at | date:'fullDate'}}\\r\\n            <div class=\\\"pull-right\\\">\\r\\n                <a [routerLink]=\\\"['/user','orders','detail', order.number]\\\" class=\\\"view-details-link strong\\\">View Details</a>\\r\\n            </div>\\r\\n        </h5>\\r\\n        <!-- <div *ngFor=\\\"let line_item of order.line_items\\\">\\r\\n      <img class=\\\"line_item_image\\\" [src]=\\\"getProductImageUrl(line_item.image_url)\\\" alt=\\\"Line Item\\\">\\r\\n    </div> -->\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/order-list-item/order-list-item.component.html\n// module id = ../../../../../src/app/user/components/orders/order-list-item/order-list-item.component.html\n// module chunks = index.0","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".line_item_image {\\n  float: left; }\\n\\n.view-details-link {\\n  color: #526cd0; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/order-list-item/order-list-item.component.scss\n// module id = ../../../../../src/app/user/components/orders/order-list-item/order-list-item.component.scss\n// module chunks = index.0","import { Component, OnInit, Input } from '@angular/core';\r\nimport { LightOrder } from '../../../../core/models/order';\r\nimport { environment } from '../../../../../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-order-list-item',\r\n  templateUrl: './order-list-item.component.html',\r\n  styleUrls: ['./order-list-item.component.scss']\r\n})\r\nexport class OrderListItemComponent implements OnInit {\r\n  @Input() order: LightOrder;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    console.log(\"order\", this.order);\r\n  }\r\n\r\n  getProductImageUrl(url) {\r\n    return environment.API_ENDPOINT + url;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/order-list-item/order-list-item.component.ts","module.exports = \"<div *ngIf=\\\"(orders$ | async)?.length; else elseBlock\\\">\\r\\n  <div *ngFor=\\\"let order of (orders$ | async)\\\">\\r\\n    <app-order-list-item [order]=\\\"order\\\" *ngIf=\\\"!order.original_line_item\\\"></app-order-list-item>\\r\\n  </div>  \\r\\n</div>    \\r\\n<ng-template #elseBlock>\\r\\n  <div class=\\\"cart-empty\\\">\\r\\n    <div class=\\\"empty-cart-icon\\\"></div>\\r\\n    <div class=\\\"empty-cart-message\\\">You have'nt ordered anything yet.</div>\\r\\n    <a class=\\\"empty-wishlist-link\\\" routerLink=\\\"/home\\\">Start Shopping</a>\\r\\n  </div>\\r\\n</ng-template>  \\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/orders.component.html\n// module id = ../../../../../src/app/user/components/orders/orders.component.html\n// module chunks = index.0","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".cart-empty {\\n  min-height: 500px;\\n  text-align: center; }\\n  .cart-empty .empty-cart-icon {\\n    height: 85px;\\n    width: 85px;\\n    margin: 0 auto;\\n    background-image: url(/assets/shoppingbag.png); }\\n  .cart-empty .empty-cart-message {\\n    font-size: 20px;\\n    color: #535766;\\n    font-weight: 600;\\n    font-family: \\\"Whitney-semi-bold\\\";\\n    line-height: 120px;\\n    margin: 15px 0; }\\n  .cart-empty .empty-wishlist-link {\\n    color: #526cd0;\\n    font-size: 16px;\\n    font-weight: 500; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/orders.component.scss\n// module id = ../../../../../src/app/user/components/orders/orders.component.scss\n// module chunks = index.0","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from '../../../interfaces';\r\nimport { UserActions } from '../../actions/user.actions';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { LightOrder } from '../../../core/models/order';\r\nimport { getUserOrders } from '../../reducers/selector';\r\n\r\n@Component({\r\n  selector: 'app-orders',\r\n  templateUrl: './orders.component.html',\r\n  styleUrls: ['./orders.component.scss']\r\n})\r\nexport class OrdersComponent implements OnInit {\r\n  orders$: Observable<LightOrder[]>;\r\n\r\n  constructor(\r\n    private store: Store<AppState>,\r\n    private userActions: UserActions\r\n  ) {\r\n    this.orders$ = this.store.select(getUserOrders);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.store.dispatch(this.userActions.getUserOrders());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/orders/orders.component.ts","module.exports = \"<ul>\\r\\n  <li>\\r\\n    <label class=\\\"title\\\">ID:</label>\\r\\n    {{(user$ | async).get('id')}}\\r\\n  </li>\\r\\n  <li>\\r\\n    <label class=\\\"title\\\">EMAIL:</label>\\r\\n    {{(user$ | async).get('email')}}\\r\\n  </li>\\r\\n  <li>\\r\\n    <label class=\\\"title\\\">DOCTOR NAME:</label>\\r\\n    {{(user$ | async).get('doctor')}}\\r\\n  </li>\\r\\n  <li>\\r\\n    <label class=\\\"title\\\">DOCTOR LICENSE:</label>\\r\\n    {{(user$ | async).get('license')}}\\r\\n  </li>\\r\\n</ul>\\r\\n<!-- <p>\\r\\n  {{user$ | async}}\\r\\n</p> -->\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/overview/overview.component.html\n// module id = ../../../../../src/app/user/components/overview/overview.component.html\n// module chunks = index.0","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"li {\\n  font-size: 17px;\\n  list-style: none;\\n  padding-top: 10px;\\n  border-bottom-style: ridge; }\\n  li .title {\\n    font-size: 17px;\\n    color: #535766;\\n    font-weight: 600;\\n    font-family: \\\"Whitney-semi-bold\\\";\\n    padding-left: 20px;\\n    margin-right: 20px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/overview/overview.component.scss\n// module id = ../../../../../src/app/user/components/overview/overview.component.scss\n// module chunks = index.0","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Store } from '@ngrx/store';\r\nimport { User } from '../../../core/models/user';\r\nimport { getUser } from '../../reducers/selector';\r\nimport { UserActions } from '../../actions/user.actions';\r\nimport { AppState } from '../../../interfaces';\r\n\r\n@Component({\r\n  selector: 'app-overview',\r\n  templateUrl: './overview.component.html',\r\n  styleUrls: ['./overview.component.scss']\r\n})\r\nexport class OverviewComponent implements OnInit {\r\n  user$: Observable<User>;\r\n\r\n  constructor(\r\n    private store: Store<AppState>,\r\n    private userActions: UserActions\r\n  ) {\r\n    this.user$ = this.store.select(getUser);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/overview/overview.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/returns/return-list-item/return-list-item.component.css\n// module id = ../../../../../src/app/user/components/returns/return-list-item/return-list-item.component.css\n// module chunks = index.0","module.exports = \"<p>\\r\\n  return-list-item works!\\r\\n</p>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/returns/return-list-item/return-list-item.component.html\n// module id = ../../../../../src/app/user/components/returns/return-list-item/return-list-item.component.html\n// module chunks = index.0","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-return-list-item',\r\n  templateUrl: './return-list-item.component.html',\r\n  styleUrls: ['./return-list-item.component.css']\r\n})\r\nexport class ReturnListItemComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/returns/return-list-item/return-list-item.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/returns/returns.component.css\n// module id = ../../../../../src/app/user/components/returns/returns.component.css\n// module chunks = index.0","module.exports = \"<p>\\r\\n  returns works!\\r\\n</p>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/returns/returns.component.html\n// module id = ../../../../../src/app/user/components/returns/returns.component.html\n// module chunks = index.0","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-returns',\r\n  templateUrl: './returns.component.html',\r\n  styleUrls: ['./returns.component.css']\r\n})\r\nexport class ReturnsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/dev/works/git/sales-store/frontend/src/app/user/components/returns/returns.component.ts","import { RouterModule } from '@angular/router';\r\nimport { UserRoutes } from './user.routes';\r\nimport { NgModule } from '@angular/core';\r\n\r\n// components\r\nimport { OverviewComponent } from './components/overview/overview.component';\r\nimport { OrdersComponent } from './components/orders/orders.component';\r\nimport { OrderListItemComponent } from './components/orders/order-list-item/order-list-item.component';\r\nimport { ReturnsComponent } from './components/returns/returns.component';\r\nimport { ReturnListItemComponent } from './components/returns/return-list-item/return-list-item.component';\r\nimport { UserComponent } from './user.component';\r\nimport { BillAddressComponent } from './components/addresses/bill-address/bill-address.component';\r\nimport { ShipAddressComponent } from './components/addresses/ship-address/ship-address.component';\r\n\r\n// services\r\n// import { UserService } from './services/user.service';\r\n\r\nimport { UserRoutes as routes } from './user.routes';\r\nimport { AddressesComponent } from './components/addresses/addresses.component';\r\nimport { SharedModule } from '../shared/index';\r\nimport { OrderDetailComponent } from './components/orders/order-detail/order-detail.component';\r\nimport { OrderAjustComponent } from './components/orders/order-ajust/order-ajust.component';\r\nimport { ShipItemComponent } from './components/orders/order-detail/ship-item/ship-item.component';\r\nimport { CorpUsersComponent } from './components/corp-users/corp-users.component';\r\nimport { CorpOrdersComponent } from './components/corp-orders/corp-orders.component';\r\nimport { CorpUserComponent } from './components/corp-users/corp-user-list/corp-user/corp-user.component';\r\nimport { CorpUserListComponent } from './components/corp-users/corp-user-list/corp-user-list.component';\r\nimport { CorpUserSignUpComponent } from './components/corp-users/corp-user-sign-up/corp-user-sign-up.component';\r\nimport { CorpUserAddressComponent } from './components/corp-users/corp-user-list/corp-user/corp-user-address/corp-user-address.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    // components\r\n    OverviewComponent,\r\n    OrderListItemComponent,\r\n    OrdersComponent,\r\n    ReturnsComponent,\r\n    ReturnListItemComponent,\r\n    UserComponent,\r\n    AddressesComponent,\r\n    OrderDetailComponent,\r\n    BillAddressComponent,\r\n    ShipAddressComponent,\r\n    OrderAjustComponent,\r\n    ShipItemComponent,\r\n    CorpUsersComponent,\r\n    CorpOrdersComponent,\r\n    CorpUserSignUpComponent,\r\n    CorpUserListComponent,\r\n    CorpUserComponent,\r\n    CorpUserAddressComponent\r\n  ],\r\n  exports: [\r\n  ],\r\n  providers: [\r\n  ],\r\n  imports: [\r\n    RouterModule.forChild(routes),\r\n    SharedModule\r\n  ]\r\n})\r\nexport class UserModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/dev/works/git/sales-store/frontend/src/app/user/index.ts","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <h4> My Account </h4>\\r\\n    <hr>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"sidebar col-md-3\\\">\\r\\n    <p><a routerLink=\\\"/user/overview\\\" routerLinkActive=\\\"active\\\">Overview</a></p>\\r\\n    <hr>\\r\\n    <p><small>ORDERS</small></p>\\r\\n    <p><a routerLink=\\\"/user/orders\\\" routerLinkActive=\\\"active\\\">My Orders</a></p>\\r\\n    <hr>\\r\\n    <p><a routerLink=\\\"/user/addresses\\\" routerLinkActive=\\\"active\\\">My Address</a></p>\\r\\n    <hr>\\r\\n    <div *ngIf=\\\"(user$ | async)?.get('corp_admin')\\\">\\r\\n      <p><small>Corp Admin</small></p>\\r\\n      <p><a routerLink=\\\"/user/corpusers\\\" routerLinkActive=\\\"active\\\">Corp Users</a></p>\\r\\n      <p><a routerLink=\\\"/user/corporders\\\" routerLinkActive=\\\"active\\\">Corp Orders</a></p>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-md-9\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/user.component.html\n// module id = ../../../../../src/app/user/user.component.html\n// module chunks = index.0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"p a {\\n  color: #697071;\\n  text-decoration: none; }\\n  p a.active {\\n    font-family: Whitney-semi-bold;\\n    color: #20bd99;\\n    font-weight: 500;\\n    background-color: transparent; }\\n\\n.sidebar {\\n  border-right: 1px solid #eaeaec; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/dev/works/git/sales-store/frontend/src/app/user/user.component.scss\n// module id = ../../../../../src/app/user/user.component.scss\n// module chunks = index.0","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from './../interfaces';\r\nimport { getUser } from './reducers/selector';\r\nimport { UserActions } from './actions/user.actions';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss']\r\n})\r\nexport class UserComponent implements OnInit {\r\n  user$: Observable<any>;\r\n\r\n  constructor(\r\n    private store: Store<AppState>,\r\n    private actions: UserActions\r\n  ) {\r\n    this.user$ = this.store.select(getUser);\r\n    this.store.dispatch(this.actions.getCountries());\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/dev/works/git/sales-store/frontend/src/app/user/user.component.ts","import { OverviewComponent } from './components/overview/overview.component';\r\nimport { UserComponent } from './user.component';\r\nimport { OrdersComponent } from './components/orders/orders.component';\r\nimport { AddressesComponent } from './components/addresses/addresses.component';\r\nimport { OrderDetailComponent } from './components/orders/order-detail/order-detail.component';\r\nimport { OrderAjustComponent } from './components/orders/order-ajust/order-ajust.component';\r\nimport { CorpUsersComponent } from './components/corp-users/corp-users.component';\r\nimport { CorpOrdersComponent } from './components/corp-orders/corp-orders.component';\r\nimport { CorpUserComponent } from './components/corp-users/corp-user-list/corp-user/corp-user.component';\r\nimport { CorpUserSignUpComponent } from './components/corp-users/corp-user-sign-up/corp-user-sign-up.component';\r\nimport { CorpUserAddressComponent } from './components/corp-users/corp-user-list/corp-user/corp-user-address/corp-user-address.component';\r\n\r\nexport const UserRoutes = [\r\n  {\r\n    path: '',\r\n    component: UserComponent,\r\n    children: [\r\n      { path: '', redirectTo: 'overview' },\r\n      { path: 'overview', component: OverviewComponent},\r\n      { path: 'orders', component: OrdersComponent },\r\n      { path: 'orders/detail/:number', component: OrderDetailComponent },\r\n      { path: 'orders/adjust/:number', component: OrderAjustComponent },\r\n      { path: 'addresses', component: AddressesComponent },\r\n      { path: 'corpusers', component: CorpUsersComponent },\r\n      { path: 'corpusers/create', component: CorpUserSignUpComponent },\r\n      { path: 'corpusers/:id', component: CorpUserComponent },\r\n      { path: 'corpusers/:id/address', component: CorpUserAddressComponent },\r\n      { path: 'corporders', component: CorpOrdersComponent }\r\n    ]\r\n  },\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// /Users/dev/works/git/sales-store/frontend/src/app/user/user.routes.ts"],"sourceRoot":"webpack:///"}